// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/DungeonArchitectRuntimePrivatePCH.h"
#include "GeneratedCppIncludes.h"
#include "DungeonArchitectRuntime.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1DungeonArchitectRuntime() {}
FName DUNGEONARCHITECTRUNTIME_EmitDungeonMarkers = FName(TEXT("EmitDungeonMarkers"));
FName DUNGEONARCHITECTRUNTIME_EmitMarkers = FName(TEXT("EmitMarkers"));
FName DUNGEONARCHITECTRUNTIME_GetNodeOffset = FName(TEXT("GetNodeOffset"));
FName DUNGEONARCHITECTRUNTIME_OnDungeonDestroyed = FName(TEXT("OnDungeonDestroyed"));
FName DUNGEONARCHITECTRUNTIME_OnDungeonLayoutBuilt = FName(TEXT("OnDungeonLayoutBuilt"));
FName DUNGEONARCHITECTRUNTIME_OnMarkersEmitted = FName(TEXT("OnMarkersEmitted"));
FName DUNGEONARCHITECTRUNTIME_OnPostDungeonBuild = FName(TEXT("OnPostDungeonBuild"));
FName DUNGEONARCHITECTRUNTIME_OnPreDungeonBuild = FName(TEXT("OnPreDungeonBuild"));
FName DUNGEONARCHITECTRUNTIME_OnPreDungeonDestroy = FName(TEXT("OnPreDungeonDestroy"));
FName DUNGEONARCHITECTRUNTIME_SelectNode = FName(TEXT("SelectNode"));
	void UDungeonConfig::StaticRegisterNativesUDungeonConfig()
	{
	}
	IMPLEMENT_CLASS(UDungeonConfig, 1658938328);
class UScriptStruct* FRectangle::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FRectangle();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FRectangle_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRectangle, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("Rectangle"), sizeof(FRectangle), Get_Z_Construct_UScriptStruct_FRectangle_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRectangle(FRectangle::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("Rectangle"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFRectangle
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFRectangle()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("Rectangle")),new UScriptStruct::TCppStructOps<FRectangle>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFRectangle;
	void UDungeonModel::StaticRegisterNativesUDungeonModel()
	{
	}
	IMPLEMENT_CLASS(UDungeonModel, 1584816116);
	void UDungeonSelectorLogic::StaticRegisterNativesUDungeonSelectorLogic()
	{
	}
	IMPLEMENT_CLASS(UDungeonSelectorLogic, 2443280215);
	void UDungeonTransformLogic::StaticRegisterNativesUDungeonTransformLogic()
	{
	}
	IMPLEMENT_CLASS(UDungeonTransformLogic, 4221816709);
	void UDungeonSpatialConstraint::StaticRegisterNativesUDungeonSpatialConstraint()
	{
	}
	IMPLEMENT_CLASS(UDungeonSpatialConstraint, 2232900185);
class UScriptStruct* FPropTypeData::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FPropTypeData();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FPropTypeData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPropTypeData, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("PropTypeData"), sizeof(FPropTypeData), Get_Z_Construct_UScriptStruct_FPropTypeData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPropTypeData(FPropTypeData::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("PropTypeData"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFPropTypeData
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFPropTypeData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PropTypeData")),new UScriptStruct::TCppStructOps<FPropTypeData>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFPropTypeData;
class UScriptStruct* FPropChildSocketData::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FPropChildSocketData();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FPropChildSocketData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPropChildSocketData, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("PropChildSocketData"), sizeof(FPropChildSocketData), Get_Z_Construct_UScriptStruct_FPropChildSocketData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPropChildSocketData(FPropChildSocketData::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("PropChildSocketData"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFPropChildSocketData
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFPropChildSocketData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PropChildSocketData")),new UScriptStruct::TCppStructOps<FPropChildSocketData>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFPropChildSocketData;
class UScriptStruct* FPropSocket::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FPropSocket();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FPropSocket_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPropSocket, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("PropSocket"), sizeof(FPropSocket), Get_Z_Construct_UScriptStruct_FPropSocket_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPropSocket(FPropSocket::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("PropSocket"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFPropSocket
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFPropSocket()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PropSocket")),new UScriptStruct::TCppStructOps<FPropSocket>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFPropSocket;
	void UDungeonEditorViewportProperties::StaticRegisterNativesUDungeonEditorViewportProperties()
	{
	}
	IMPLEMENT_CLASS(UDungeonEditorViewportProperties, 2823843616);
	void UDungeonThemeAsset::StaticRegisterNativesUDungeonThemeAsset()
	{
	}
	IMPLEMENT_CLASS(UDungeonThemeAsset, 373581947);
	void UDungeonBuilder::EmitDungeonMarkers()
	{
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_EmitDungeonMarkers),NULL);
	}
	void UDungeonBuilder::StaticRegisterNativesUDungeonBuilder()
	{
		FNativeFunctionRegistrar::RegisterFunction(UDungeonBuilder::StaticClass(), "EmitDungeonMarkers",(Native)&UDungeonBuilder::execEmitDungeonMarkers);
		FNativeFunctionRegistrar::RegisterFunction(UDungeonBuilder::StaticClass(), "EmitMarker",(Native)&UDungeonBuilder::execEmitMarker);
		FNativeFunctionRegistrar::RegisterFunction(UDungeonBuilder::StaticClass(), "GetMarkers",(Native)&UDungeonBuilder::execGetMarkers);
	}
	IMPLEMENT_CLASS(UDungeonBuilder, 2373118527);
	void UDungeonMarkerEmitter::EmitMarkers(UDungeonBuilder* Builder, UDungeonModel* Model, UDungeonConfig* Config)
	{
		DungeonMarkerEmitter_eventEmitMarkers_Parms Parms;
		Parms.Builder=Builder;
		Parms.Model=Model;
		Parms.Config=Config;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_EmitMarkers),&Parms);
	}
	void UDungeonMarkerEmitter::StaticRegisterNativesUDungeonMarkerEmitter()
	{
		FNativeFunctionRegistrar::RegisterFunction(UDungeonMarkerEmitter::StaticClass(), "EmitMarkers",(Native)&UDungeonMarkerEmitter::execEmitMarkers);
	}
	IMPLEMENT_CLASS(UDungeonMarkerEmitter, 1913611677);
	void ADungeon::StaticRegisterNativesADungeon()
	{
		FNativeFunctionRegistrar::RegisterFunction(ADungeon::StaticClass(), "BuildDungeon",(Native)&ADungeon::execBuildDungeon);
		FNativeFunctionRegistrar::RegisterFunction(ADungeon::StaticClass(), "DestroyDungeon",(Native)&ADungeon::execDestroyDungeon);
		FNativeFunctionRegistrar::RegisterFunction(ADungeon::StaticClass(), "RebuildNavigation",(Native)&ADungeon::execRebuildNavigation);
	}
	IMPLEMENT_CLASS(ADungeon, 2900580997);
	void UDungeonActorSelector::StaticRegisterNativesUDungeonActorSelector()
	{
	}
	IMPLEMENT_CLASS(UDungeonActorSelector, 1940550860);
	void UFloorPlanModel::StaticRegisterNativesUFloorPlanModel()
	{
	}
	IMPLEMENT_CLASS(UFloorPlanModel, 3044884510);
	void UFloorPlanBuilder::StaticRegisterNativesUFloorPlanBuilder()
	{
	}
	IMPLEMENT_CLASS(UFloorPlanBuilder, 124592205);
static class UEnum* FCellType_StaticEnum()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_FCellType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_DungeonArchitectRuntime_FCellType, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("FCellType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_FCellType(FCellType_StaticEnum, TEXT("/Script/DungeonArchitectRuntime"), TEXT("FCellType"), false, nullptr, nullptr);
static class UEnum* DungeonModelBuildState_StaticEnum()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_DungeonModelBuildState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_DungeonArchitectRuntime_DungeonModelBuildState, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("DungeonModelBuildState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_DungeonModelBuildState(DungeonModelBuildState_StaticEnum, TEXT("/Script/DungeonArchitectRuntime"), TEXT("DungeonModelBuildState"), false, nullptr, nullptr);
class UScriptStruct* FStairInfo::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FStairInfo();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FStairInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStairInfo, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("StairInfo"), sizeof(FStairInfo), Get_Z_Construct_UScriptStruct_FStairInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStairInfo(FStairInfo::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("StairInfo"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFStairInfo
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFStairInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StairInfo")),new UScriptStruct::TCppStructOps<FStairInfo>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFStairInfo;
class UScriptStruct* FGridCellInfo::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FGridCellInfo();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FGridCellInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGridCellInfo, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("GridCellInfo"), sizeof(FGridCellInfo), Get_Z_Construct_UScriptStruct_FGridCellInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGridCellInfo(FGridCellInfo::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("GridCellInfo"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridCellInfo
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridCellInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GridCellInfo")),new UScriptStruct::TCppStructOps<FGridCellInfo>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridCellInfo;
class UScriptStruct* FCellDoor::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FCellDoor();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FCellDoor_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCellDoor, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("CellDoor"), sizeof(FCellDoor), Get_Z_Construct_UScriptStruct_FCellDoor_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCellDoor(FCellDoor::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("CellDoor"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFCellDoor
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFCellDoor()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CellDoor")),new UScriptStruct::TCppStructOps<FCellDoor>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFCellDoor;
class UScriptStruct* FCell::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FCell();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FCell_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCell, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("Cell"), sizeof(FCell), Get_Z_Construct_UScriptStruct_FCell_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCell(FCell::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("Cell"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFCell
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFCell()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("Cell")),new UScriptStruct::TCppStructOps<FCell>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFCell;
	void UGridDungeonModel::StaticRegisterNativesUGridDungeonModel()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonModel::StaticClass(), "GetGridCellLookup",(Native)&UGridDungeonModel::execGetGridCellLookup);
	}
	IMPLEMENT_CLASS(UGridDungeonModel, 2571735538);
	void UGridDungeonBuilder::StaticRegisterNativesUGridDungeonBuilder()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonBuilder::StaticClass(), "ContainsCell",(Native)&UGridDungeonBuilder::execContainsCell);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonBuilder::StaticClass(), "GetCellsOfType",(Native)&UGridDungeonBuilder::execGetCellsOfType);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonBuilder::StaticClass(), "GetCorridors",(Native)&UGridDungeonBuilder::execGetCorridors);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonBuilder::StaticClass(), "GetRooms",(Native)&UGridDungeonBuilder::execGetRooms);
	}
	IMPLEMENT_CLASS(UGridDungeonBuilder, 1035489249);
static class UEnum* EIsaacRoomTileType_StaticEnum()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomTileType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomTileType, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("EIsaacRoomTileType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EIsaacRoomTileType(EIsaacRoomTileType_StaticEnum, TEXT("/Script/DungeonArchitectRuntime"), TEXT("EIsaacRoomTileType"), false, nullptr, nullptr);
static class UEnum* EIsaacRoomType_StaticEnum()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomType, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("EIsaacRoomType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EIsaacRoomType(EIsaacRoomType_StaticEnum, TEXT("/Script/DungeonArchitectRuntime"), TEXT("EIsaacRoomType"), false, nullptr, nullptr);
class UScriptStruct* FIsaacDoor::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FIsaacDoor();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FIsaacDoor_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FIsaacDoor, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("IsaacDoor"), sizeof(FIsaacDoor), Get_Z_Construct_UScriptStruct_FIsaacDoor_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FIsaacDoor(FIsaacDoor::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("IsaacDoor"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFIsaacDoor
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFIsaacDoor()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("IsaacDoor")),new UScriptStruct::TCppStructOps<FIsaacDoor>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFIsaacDoor;
class UScriptStruct* FIsaacRoom::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FIsaacRoom();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FIsaacRoom_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FIsaacRoom, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("IsaacRoom"), sizeof(FIsaacRoom), Get_Z_Construct_UScriptStruct_FIsaacRoom_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FIsaacRoom(FIsaacRoom::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("IsaacRoom"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFIsaacRoom
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFIsaacRoom()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("IsaacRoom")),new UScriptStruct::TCppStructOps<FIsaacRoom>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFIsaacRoom;
class UScriptStruct* FIsaacRoomLayout::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FIsaacRoomLayout();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FIsaacRoomLayout_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FIsaacRoomLayout, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("IsaacRoomLayout"), sizeof(FIsaacRoomLayout), Get_Z_Construct_UScriptStruct_FIsaacRoomLayout_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FIsaacRoomLayout(FIsaacRoomLayout::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("IsaacRoomLayout"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFIsaacRoomLayout
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFIsaacRoomLayout()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("IsaacRoomLayout")),new UScriptStruct::TCppStructOps<FIsaacRoomLayout>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFIsaacRoomLayout;
class UScriptStruct* FIsaacRoomTile::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FIsaacRoomTile();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FIsaacRoomTile_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FIsaacRoomTile, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("IsaacRoomTile"), sizeof(FIsaacRoomTile), Get_Z_Construct_UScriptStruct_FIsaacRoomTile_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FIsaacRoomTile(FIsaacRoomTile::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("IsaacRoomTile"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFIsaacRoomTile
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFIsaacRoomTile()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("IsaacRoomTile")),new UScriptStruct::TCppStructOps<FIsaacRoomTile>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFIsaacRoomTile;
	void UIsaacDungeonModel::StaticRegisterNativesUIsaacDungeonModel()
	{
	}
	IMPLEMENT_CLASS(UIsaacDungeonModel, 3634656748);
	void UIsaacDungeonBuilder::StaticRegisterNativesUIsaacDungeonBuilder()
	{
	}
	IMPLEMENT_CLASS(UIsaacDungeonBuilder, 3916874287);
class UScriptStruct* FSnapModuleMetaData::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FSnapModuleMetaData();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FSnapModuleMetaData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSnapModuleMetaData, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("SnapModuleMetaData"), sizeof(FSnapModuleMetaData), Get_Z_Construct_UScriptStruct_FSnapModuleMetaData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSnapModuleMetaData(FSnapModuleMetaData::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("SnapModuleMetaData"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFSnapModuleMetaData
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFSnapModuleMetaData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SnapModuleMetaData")),new UScriptStruct::TCppStructOps<FSnapModuleMetaData>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFSnapModuleMetaData;
	void ASnapModuleInfo::StaticRegisterNativesASnapModuleInfo()
	{
	}
	IMPLEMENT_CLASS(ASnapModuleInfo, 2585063742);
	void USnapModule::StaticRegisterNativesUSnapModule()
	{
	}
	IMPLEMENT_CLASS(USnapModule, 2324250334);
static class UEnum* ESnapDungeonLayoutLink_StaticEnum()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDungeonLayoutLink();
		Singleton = GetStaticEnum(Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDungeonLayoutLink, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("ESnapDungeonLayoutLink"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESnapDungeonLayoutLink(ESnapDungeonLayoutLink_StaticEnum, TEXT("/Script/DungeonArchitectRuntime"), TEXT("ESnapDungeonLayoutLink"), false, nullptr, nullptr);
class UScriptStruct* FSnapDungeonLayoutLink::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FSnapDungeonLayoutLink();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FSnapDungeonLayoutLink_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSnapDungeonLayoutLink, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("SnapDungeonLayoutLink"), sizeof(FSnapDungeonLayoutLink), Get_Z_Construct_UScriptStruct_FSnapDungeonLayoutLink_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSnapDungeonLayoutLink(FSnapDungeonLayoutLink::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("SnapDungeonLayoutLink"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFSnapDungeonLayoutLink
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFSnapDungeonLayoutLink()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SnapDungeonLayoutLink")),new UScriptStruct::TCppStructOps<FSnapDungeonLayoutLink>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFSnapDungeonLayoutLink;
	void USnapDungeonLayoutNode::StaticRegisterNativesUSnapDungeonLayoutNode()
	{
	}
	IMPLEMENT_CLASS(USnapDungeonLayoutNode, 2926507710);
	void USnapDungeonModel::StaticRegisterNativesUSnapDungeonModel()
	{
	}
	IMPLEMENT_CLASS(USnapDungeonModel, 1273202114);
	void USnapDungeonBuilder::StaticRegisterNativesUSnapDungeonBuilder()
	{
	}
	IMPLEMENT_CLASS(USnapDungeonBuilder, 3191221681);
	void UFloorPlanConfig::StaticRegisterNativesUFloorPlanConfig()
	{
	}
	IMPLEMENT_CLASS(UFloorPlanConfig, 1739870788);
	void UGridDungeonConfig::StaticRegisterNativesUGridDungeonConfig()
	{
	}
	IMPLEMENT_CLASS(UGridDungeonConfig, 2659523398);
	void UIsaacRoomLayoutBuilder::StaticRegisterNativesUIsaacRoomLayoutBuilder()
	{
	}
	IMPLEMENT_CLASS(UIsaacRoomLayoutBuilder, 3343401683);
	void UIsaacDungeonConfig::StaticRegisterNativesUIsaacDungeonConfig()
	{
	}
	IMPLEMENT_CLASS(UIsaacDungeonConfig, 1535262724);
	void USnapDungeonConfig::StaticRegisterNativesUSnapDungeonConfig()
	{
	}
	IMPLEMENT_CLASS(USnapDungeonConfig, 934391895);
	void ADungeonDebug::StaticRegisterNativesADungeonDebug()
	{
	}
	IMPLEMENT_CLASS(ADungeonDebug, 3510041261);
	void UDungeonEventListener::OnDungeonDestroyed(ADungeon* Dungeon)
	{
		DungeonEventListener_eventOnDungeonDestroyed_Parms Parms;
		Parms.Dungeon=Dungeon;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_OnDungeonDestroyed),&Parms);
	}
	void UDungeonEventListener::OnDungeonLayoutBuilt(ADungeon* Dungeon)
	{
		DungeonEventListener_eventOnDungeonLayoutBuilt_Parms Parms;
		Parms.Dungeon=Dungeon;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_OnDungeonLayoutBuilt),&Parms);
	}
	void UDungeonEventListener::OnMarkersEmitted(ADungeon* Dungeon)
	{
		DungeonEventListener_eventOnMarkersEmitted_Parms Parms;
		Parms.Dungeon=Dungeon;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_OnMarkersEmitted),&Parms);
	}
	void UDungeonEventListener::OnPostDungeonBuild(ADungeon* Dungeon)
	{
		DungeonEventListener_eventOnPostDungeonBuild_Parms Parms;
		Parms.Dungeon=Dungeon;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_OnPostDungeonBuild),&Parms);
	}
	void UDungeonEventListener::OnPreDungeonBuild(ADungeon* Dungeon)
	{
		DungeonEventListener_eventOnPreDungeonBuild_Parms Parms;
		Parms.Dungeon=Dungeon;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_OnPreDungeonBuild),&Parms);
	}
	void UDungeonEventListener::OnPreDungeonDestroy(ADungeon* Dungeon)
	{
		DungeonEventListener_eventOnPreDungeonDestroy_Parms Parms;
		Parms.Dungeon=Dungeon;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_OnPreDungeonDestroy),&Parms);
	}
	void UDungeonEventListener::StaticRegisterNativesUDungeonEventListener()
	{
		FNativeFunctionRegistrar::RegisterFunction(UDungeonEventListener::StaticClass(), "OnDungeonDestroyed",(Native)&UDungeonEventListener::execOnDungeonDestroyed);
		FNativeFunctionRegistrar::RegisterFunction(UDungeonEventListener::StaticClass(), "OnDungeonLayoutBuilt",(Native)&UDungeonEventListener::execOnDungeonLayoutBuilt);
		FNativeFunctionRegistrar::RegisterFunction(UDungeonEventListener::StaticClass(), "OnMarkersEmitted",(Native)&UDungeonEventListener::execOnMarkersEmitted);
		FNativeFunctionRegistrar::RegisterFunction(UDungeonEventListener::StaticClass(), "OnPostDungeonBuild",(Native)&UDungeonEventListener::execOnPostDungeonBuild);
		FNativeFunctionRegistrar::RegisterFunction(UDungeonEventListener::StaticClass(), "OnPreDungeonBuild",(Native)&UDungeonEventListener::execOnPreDungeonBuild);
		FNativeFunctionRegistrar::RegisterFunction(UDungeonEventListener::StaticClass(), "OnPreDungeonDestroy",(Native)&UDungeonEventListener::execOnPreDungeonDestroy);
	}
	IMPLEMENT_CLASS(UDungeonEventListener, 4218841147);
	void ADungeonInstancedMeshActor::StaticRegisterNativesADungeonInstancedMeshActor()
	{
	}
	IMPLEMENT_CLASS(ADungeonInstancedMeshActor, 4083447838);
class UScriptStruct* FMaterialOverride::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialOverride();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FMaterialOverride_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialOverride, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("MaterialOverride"), sizeof(FMaterialOverride), Get_Z_Construct_UScriptStruct_FMaterialOverride_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialOverride(FMaterialOverride::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("MaterialOverride"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFMaterialOverride
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFMaterialOverride()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialOverride")),new UScriptStruct::TCppStructOps<FMaterialOverride>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFMaterialOverride;
	void UDungeonMesh::StaticRegisterNativesUDungeonMesh()
	{
	}
	IMPLEMENT_CLASS(UDungeonMesh, 3325420048);
	void UDungeonModelHelper::StaticRegisterNativesUDungeonModelHelper()
	{
		FNativeFunctionRegistrar::RegisterFunction(UDungeonModelHelper::StaticClass(), "ExpandBounds",(Native)&UDungeonModelHelper::execExpandBounds);
		FNativeFunctionRegistrar::RegisterFunction(UDungeonModelHelper::StaticClass(), "GetCenterExtent",(Native)&UDungeonModelHelper::execGetCenterExtent);
		FNativeFunctionRegistrar::RegisterFunction(UDungeonModelHelper::StaticClass(), "GetRectAreaPoints",(Native)&UDungeonModelHelper::execGetRectAreaPoints);
		FNativeFunctionRegistrar::RegisterFunction(UDungeonModelHelper::StaticClass(), "GetRectBorderPoints",(Native)&UDungeonModelHelper::execGetRectBorderPoints);
		FNativeFunctionRegistrar::RegisterFunction(UDungeonModelHelper::StaticClass(), "MakeIntVector",(Native)&UDungeonModelHelper::execMakeIntVector);
		FNativeFunctionRegistrar::RegisterFunction(UDungeonModelHelper::StaticClass(), "MakeVector",(Native)&UDungeonModelHelper::execMakeVector);
	}
	IMPLEMENT_CLASS(UDungeonModelHelper, 2588989531);
	void UGridDungeonModelHelper::StaticRegisterNativesUGridDungeonModelHelper()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonModelHelper::StaticClass(), "AddPaintCell",(Native)&UGridDungeonModelHelper::execAddPaintCell);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonModelHelper::StaticClass(), "GetBoundingBox",(Native)&UGridDungeonModelHelper::execGetBoundingBox);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonModelHelper::StaticClass(), "GetCellCenter",(Native)&UGridDungeonModelHelper::execGetCellCenter);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonModelHelper::StaticClass(), "GetCellConnectedRooms",(Native)&UGridDungeonModelHelper::execGetCellConnectedRooms);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonModelHelper::StaticClass(), "GetCellMSTRooms",(Native)&UGridDungeonModelHelper::execGetCellMSTRooms);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonModelHelper::StaticClass(), "GetDoorExits",(Native)&UGridDungeonModelHelper::execGetDoorExits);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonModelHelper::StaticClass(), "GetRandomCellLocation",(Native)&UGridDungeonModelHelper::execGetRandomCellLocation);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonModelHelper::StaticClass(), "GetRoomFreeEdge",(Native)&UGridDungeonModelHelper::execGetRoomFreeEdge);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonModelHelper::StaticClass(), "RemovePaintCell",(Native)&UGridDungeonModelHelper::execRemovePaintCell);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonModelHelper::StaticClass(), "ToWorldCoords",(Native)&UGridDungeonModelHelper::execToWorldCoords);
	}
	IMPLEMENT_CLASS(UGridDungeonModelHelper, 3691415005);
	void ADungeonParticleSystem::StaticRegisterNativesADungeonParticleSystem()
	{
	}
	IMPLEMENT_CLASS(ADungeonParticleSystem, 4023169438);
	void UDungeonPropDataAsset::StaticRegisterNativesUDungeonPropDataAsset()
	{
	}
	IMPLEMENT_CLASS(UDungeonPropDataAsset, 2277787698);
	bool UFloorPlanSelectorLogic::SelectNode(UFloorPlanModel* Model, UFloorPlanConfig* Config, FRandomStream const& RandomStream, int32 GridX, int32 GridY, int32 GridZ)
	{
		FloorPlanSelectorLogic_eventSelectNode_Parms Parms;
		Parms.Model=Model;
		Parms.Config=Config;
		Parms.RandomStream=RandomStream;
		Parms.GridX=GridX;
		Parms.GridY=GridY;
		Parms.GridZ=GridZ;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_SelectNode),&Parms);
		return !!Parms.ReturnValue;
	}
	void UFloorPlanSelectorLogic::StaticRegisterNativesUFloorPlanSelectorLogic()
	{
		FNativeFunctionRegistrar::RegisterFunction(UFloorPlanSelectorLogic::StaticClass(), "SelectNode",(Native)&UFloorPlanSelectorLogic::execSelectNode);
	}
	IMPLEMENT_CLASS(UFloorPlanSelectorLogic, 2276308331);
	bool UGridDungeonSelectorLogic::SelectNode(UGridDungeonModel* Model, UGridDungeonConfig* Config, FCell const& Cell, FRandomStream const& RandomStream, int32 GridX, int32 GridY)
	{
		GridDungeonSelectorLogic_eventSelectNode_Parms Parms;
		Parms.Model=Model;
		Parms.Config=Config;
		Parms.Cell=Cell;
		Parms.RandomStream=RandomStream;
		Parms.GridX=GridX;
		Parms.GridY=GridY;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_SelectNode),&Parms);
		return !!Parms.ReturnValue;
	}
	void UGridDungeonSelectorLogic::StaticRegisterNativesUGridDungeonSelectorLogic()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonSelectorLogic::StaticClass(), "ContainsStair",(Native)&UGridDungeonSelectorLogic::execContainsStair);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonSelectorLogic::StaticClass(), "IsOnCorner",(Native)&UGridDungeonSelectorLogic::execIsOnCorner);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonSelectorLogic::StaticClass(), "IsPassageTooNarrow",(Native)&UGridDungeonSelectorLogic::execIsPassageTooNarrow);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonSelectorLogic::StaticClass(), "IsPillarOnCorner",(Native)&UGridDungeonSelectorLogic::execIsPillarOnCorner);
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonSelectorLogic::StaticClass(), "SelectNode",(Native)&UGridDungeonSelectorLogic::execSelectNode);
	}
	IMPLEMENT_CLASS(UGridDungeonSelectorLogic, 1682956735);
	bool UIsaacDungeonSelectorLogic::SelectNode(UIsaacDungeonModel* Model)
	{
		IsaacDungeonSelectorLogic_eventSelectNode_Parms Parms;
		Parms.Model=Model;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_SelectNode),&Parms);
		return !!Parms.ReturnValue;
	}
	void UIsaacDungeonSelectorLogic::StaticRegisterNativesUIsaacDungeonSelectorLogic()
	{
		FNativeFunctionRegistrar::RegisterFunction(UIsaacDungeonSelectorLogic::StaticClass(), "SelectNode",(Native)&UIsaacDungeonSelectorLogic::execSelectNode);
	}
	IMPLEMENT_CLASS(UIsaacDungeonSelectorLogic, 1736524744);
	bool USnapDungeonSelectorLogic::SelectNode(USnapDungeonModel* Model)
	{
		SnapDungeonSelectorLogic_eventSelectNode_Parms Parms;
		Parms.Model=Model;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_SelectNode),&Parms);
		return !!Parms.ReturnValue;
	}
	void USnapDungeonSelectorLogic::StaticRegisterNativesUSnapDungeonSelectorLogic()
	{
		FNativeFunctionRegistrar::RegisterFunction(USnapDungeonSelectorLogic::StaticClass(), "SelectNode",(Native)&USnapDungeonSelectorLogic::execSelectNode);
	}
	IMPLEMENT_CLASS(USnapDungeonSelectorLogic, 1534061386);
static class UEnum* EGridSpatialCellOccupation_StaticEnum()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_EGridSpatialCellOccupation();
		Singleton = GetStaticEnum(Z_Construct_UEnum_DungeonArchitectRuntime_EGridSpatialCellOccupation, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("EGridSpatialCellOccupation"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EGridSpatialCellOccupation(EGridSpatialCellOccupation_StaticEnum, TEXT("/Script/DungeonArchitectRuntime"), TEXT("EGridSpatialCellOccupation"), false, nullptr, nullptr);
class UScriptStruct* FGridSpatialConstraintCellData::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FGridSpatialConstraintCellData();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FGridSpatialConstraintCellData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGridSpatialConstraintCellData, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("GridSpatialConstraintCellData"), sizeof(FGridSpatialConstraintCellData), Get_Z_Construct_UScriptStruct_FGridSpatialConstraintCellData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGridSpatialConstraintCellData(FGridSpatialConstraintCellData::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("GridSpatialConstraintCellData"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridSpatialConstraintCellData
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridSpatialConstraintCellData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GridSpatialConstraintCellData")),new UScriptStruct::TCppStructOps<FGridSpatialConstraintCellData>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridSpatialConstraintCellData;
class UScriptStruct* FGridSpatialConstraint2x2Data::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FGridSpatialConstraint2x2Data();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FGridSpatialConstraint2x2Data_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGridSpatialConstraint2x2Data, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("GridSpatialConstraint2x2Data"), sizeof(FGridSpatialConstraint2x2Data), Get_Z_Construct_UScriptStruct_FGridSpatialConstraint2x2Data_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGridSpatialConstraint2x2Data(FGridSpatialConstraint2x2Data::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("GridSpatialConstraint2x2Data"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridSpatialConstraint2x2Data
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridSpatialConstraint2x2Data()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GridSpatialConstraint2x2Data")),new UScriptStruct::TCppStructOps<FGridSpatialConstraint2x2Data>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridSpatialConstraint2x2Data;
	void UGridSpatialConstraint2x2::StaticRegisterNativesUGridSpatialConstraint2x2()
	{
	}
	IMPLEMENT_CLASS(UGridSpatialConstraint2x2, 3439520342);
class UScriptStruct* FGridSpatialConstraint3x3Data::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FGridSpatialConstraint3x3Data();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FGridSpatialConstraint3x3Data_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGridSpatialConstraint3x3Data, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("GridSpatialConstraint3x3Data"), sizeof(FGridSpatialConstraint3x3Data), Get_Z_Construct_UScriptStruct_FGridSpatialConstraint3x3Data_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGridSpatialConstraint3x3Data(FGridSpatialConstraint3x3Data::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("GridSpatialConstraint3x3Data"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridSpatialConstraint3x3Data
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridSpatialConstraint3x3Data()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GridSpatialConstraint3x3Data")),new UScriptStruct::TCppStructOps<FGridSpatialConstraint3x3Data>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridSpatialConstraint3x3Data;
	void UGridSpatialConstraint3x3::StaticRegisterNativesUGridSpatialConstraint3x3()
	{
	}
	IMPLEMENT_CLASS(UGridSpatialConstraint3x3, 565175592);
class UScriptStruct* FGridSpatialConstraintEdgeData::StaticStruct()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FGridSpatialConstraintEdgeData();
		extern DUNGEONARCHITECTRUNTIME_API uint32 Get_Z_Construct_UScriptStruct_FGridSpatialConstraintEdgeData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGridSpatialConstraintEdgeData, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("GridSpatialConstraintEdgeData"), sizeof(FGridSpatialConstraintEdgeData), Get_Z_Construct_UScriptStruct_FGridSpatialConstraintEdgeData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGridSpatialConstraintEdgeData(FGridSpatialConstraintEdgeData::StaticStruct, TEXT("/Script/DungeonArchitectRuntime"), TEXT("GridSpatialConstraintEdgeData"), false, nullptr, nullptr);
static struct FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridSpatialConstraintEdgeData
{
	FScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridSpatialConstraintEdgeData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GridSpatialConstraintEdgeData")),new UScriptStruct::TCppStructOps<FGridSpatialConstraintEdgeData>);
	}
} ScriptStruct_DungeonArchitectRuntime_StaticRegisterNativesFGridSpatialConstraintEdgeData;
	void UGridSpatialConstraintEdge::StaticRegisterNativesUGridSpatialConstraintEdge()
	{
	}
	IMPLEMENT_CLASS(UGridSpatialConstraintEdge, 2642291243);
	void UDungeonToolData::StaticRegisterNativesUDungeonToolData()
	{
	}
	IMPLEMENT_CLASS(UDungeonToolData, 1938992143);
	void UFloorPlanToolData::StaticRegisterNativesUFloorPlanToolData()
	{
	}
	IMPLEMENT_CLASS(UFloorPlanToolData, 3458662928);
	void UGridDungeonToolData::StaticRegisterNativesUGridDungeonToolData()
	{
	}
	IMPLEMENT_CLASS(UGridDungeonToolData, 2503909677);
	void UIsaacDungeonToolData::StaticRegisterNativesUIsaacDungeonToolData()
	{
	}
	IMPLEMENT_CLASS(UIsaacDungeonToolData, 1347798788);
	void USnapDungeonToolData::StaticRegisterNativesUSnapDungeonToolData()
	{
	}
	IMPLEMENT_CLASS(USnapDungeonToolData, 1208631813);
	void UFloorPlanTransformLogic::GetNodeOffset(UFloorPlanModel* Model, UFloorPlanConfig* Config, FRandomStream const& RandomStream, int32 GridX, int32 GridY, FTransform& Offset)
	{
		FloorPlanTransformLogic_eventGetNodeOffset_Parms Parms;
		Parms.Model=Model;
		Parms.Config=Config;
		Parms.RandomStream=RandomStream;
		Parms.GridX=GridX;
		Parms.GridY=GridY;
		Parms.Offset=Offset;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_GetNodeOffset),&Parms);
		Offset=Parms.Offset;
	}
	void UFloorPlanTransformLogic::StaticRegisterNativesUFloorPlanTransformLogic()
	{
		FNativeFunctionRegistrar::RegisterFunction(UFloorPlanTransformLogic::StaticClass(), "GetNodeOffset",(Native)&UFloorPlanTransformLogic::execGetNodeOffset);
	}
	IMPLEMENT_CLASS(UFloorPlanTransformLogic, 1902906912);
	void UGridDungeonTransformLogic::GetNodeOffset(UGridDungeonModel* Model, UGridDungeonConfig* Config, FCell const& Cell, FRandomStream const& RandomStream, int32 GridX, int32 GridY, FTransform& Offset)
	{
		GridDungeonTransformLogic_eventGetNodeOffset_Parms Parms;
		Parms.Model=Model;
		Parms.Config=Config;
		Parms.Cell=Cell;
		Parms.RandomStream=RandomStream;
		Parms.GridX=GridX;
		Parms.GridY=GridY;
		Parms.Offset=Offset;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_GetNodeOffset),&Parms);
		Offset=Parms.Offset;
	}
	void UGridDungeonTransformLogic::StaticRegisterNativesUGridDungeonTransformLogic()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGridDungeonTransformLogic::StaticClass(), "GetNodeOffset",(Native)&UGridDungeonTransformLogic::execGetNodeOffset);
	}
	IMPLEMENT_CLASS(UGridDungeonTransformLogic, 755596951);
	void UIsaacDungeonTransformLogic::GetNodeOffset(UIsaacDungeonModel* Model, FTransform& Offset)
	{
		IsaacDungeonTransformLogic_eventGetNodeOffset_Parms Parms;
		Parms.Model=Model;
		Parms.Offset=Offset;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_GetNodeOffset),&Parms);
		Offset=Parms.Offset;
	}
	void UIsaacDungeonTransformLogic::StaticRegisterNativesUIsaacDungeonTransformLogic()
	{
		FNativeFunctionRegistrar::RegisterFunction(UIsaacDungeonTransformLogic::StaticClass(), "GetNodeOffset",(Native)&UIsaacDungeonTransformLogic::execGetNodeOffset);
	}
	IMPLEMENT_CLASS(UIsaacDungeonTransformLogic, 2932717186);
	void USnapDungeonTransformLogic::GetNodeOffset(USnapDungeonModel* Model, FTransform& Offset)
	{
		SnapDungeonTransformLogic_eventGetNodeOffset_Parms Parms;
		Parms.Model=Model;
		Parms.Offset=Offset;
		ProcessEvent(FindFunctionChecked(DUNGEONARCHITECTRUNTIME_GetNodeOffset),&Parms);
		Offset=Parms.Offset;
	}
	void USnapDungeonTransformLogic::StaticRegisterNativesUSnapDungeonTransformLogic()
	{
		FNativeFunctionRegistrar::RegisterFunction(USnapDungeonTransformLogic::StaticClass(), "GetNodeOffset",(Native)&USnapDungeonTransformLogic::execGetNodeOffset);
	}
	IMPLEMENT_CLASS(USnapDungeonTransformLogic, 1458822979);
	void ADungeonVolume::StaticRegisterNativesADungeonVolume()
	{
	}
	IMPLEMENT_CLASS(ADungeonVolume, 4181781553);
	void ADungeonMirrorVolume::StaticRegisterNativesADungeonMirrorVolume()
	{
	}
	IMPLEMENT_CLASS(ADungeonMirrorVolume, 3110423545);
	void ADungeonNegationVolume::StaticRegisterNativesADungeonNegationVolume()
	{
	}
	IMPLEMENT_CLASS(ADungeonNegationVolume, 413709716);
	void ADungeonThemeOverrideVolume::StaticRegisterNativesADungeonThemeOverrideVolume()
	{
	}
	IMPLEMENT_CLASS(ADungeonThemeOverrideVolume, 453366353);
	void AFloorPlanDoorVolume::StaticRegisterNativesAFloorPlanDoorVolume()
	{
	}
	IMPLEMENT_CLASS(AFloorPlanDoorVolume, 1981713772);
	void AFloorPlanRoomVolume::StaticRegisterNativesAFloorPlanRoomVolume()
	{
	}
	IMPLEMENT_CLASS(AFloorPlanRoomVolume, 2126567474);
	void AGridDungeonPlatformVolume::StaticRegisterNativesAGridDungeonPlatformVolume()
	{
	}
	IMPLEMENT_CLASS(AGridDungeonPlatformVolume, 1753348497);
	void USimpleIsaacRoomLayoutBuilder::StaticRegisterNativesUSimpleIsaacRoomLayoutBuilder()
	{
	}
	IMPLEMENT_CLASS(USimpleIsaacRoomLayoutBuilder, 2709128665);
	void UStylizedIsaacRoomLayoutBuilder::StaticRegisterNativesUStylizedIsaacRoomLayoutBuilder()
	{
	}
	IMPLEMENT_CLASS(UStylizedIsaacRoomLayoutBuilder, 3586783942);
static class UEnum* EUSnapDoorMeshType_StaticEnum()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_EUSnapDoorMeshType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_DungeonArchitectRuntime_EUSnapDoorMeshType, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("EUSnapDoorMeshType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EUSnapDoorMeshType(EUSnapDoorMeshType_StaticEnum, TEXT("/Script/DungeonArchitectRuntime"), TEXT("EUSnapDoorMeshType"), false, nullptr, nullptr);
	void USnapDoorMeshInfo::StaticRegisterNativesUSnapDoorMeshInfo()
	{
	}
	IMPLEMENT_CLASS(USnapDoorMeshInfo, 4097417021);
	void USnapDoorAsset::StaticRegisterNativesUSnapDoorAsset()
	{
	}
	IMPLEMENT_CLASS(USnapDoorAsset, 712248402);
static class UEnum* ESnapDoorMode_StaticEnum()
{
	extern DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDoorMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDoorMode, Z_Construct_UPackage__Script_DungeonArchitectRuntime(), TEXT("ESnapDoorMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESnapDoorMode(ESnapDoorMode_StaticEnum, TEXT("/Script/DungeonArchitectRuntime"), TEXT("ESnapDoorMode"), false, nullptr, nullptr);
	void ASnapDoor::StaticRegisterNativesASnapDoor()
	{
	}
	IMPLEMENT_CLASS(ASnapDoor, 2992849131);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FIntVector();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FTransform();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraph_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_UBillboardComponent_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FGuid();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FQuat();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FBox();
	ENGINE_API class UClass* Z_Construct_UClass_UWorld_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMesh_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRandomStream();
	ENGINE_API class UClass* Z_Construct_UClass_AVolume();
	ENGINE_API class UClass* Z_Construct_UClass_UArrowComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTextRenderComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UChildActorComponent_NoRegister();

	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonConfig_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonConfig();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FRectangle();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonModel_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonModel();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonSelectorLogic_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonSelectorLogic();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonTransformLogic_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonTransformLogic();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonSpatialConstraint_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonSpatialConstraint();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FPropTypeData();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FPropChildSocketData();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FPropSocket();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonEditorViewportProperties_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonEditorViewportProperties();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonThemeAsset_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonThemeAsset();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonBuilder_EmitDungeonMarkers();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonBuilder_EmitMarker();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonBuilder_GetMarkers();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonBuilder_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonBuilder();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonMarkerEmitter_EmitMarkers();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonMarkerEmitter_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonMarkerEmitter();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UDelegateFunction_DungeonArchitectRuntime_DungeonBuildCompleteBindableEvent__DelegateSignature();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_ADungeon_BuildDungeon();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_ADungeon_DestroyDungeon();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_ADungeon_RebuildNavigation();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeon_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeon();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonActorSelector_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonActorSelector();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UFloorPlanModel_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UFloorPlanModel();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UFloorPlanBuilder_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UFloorPlanBuilder();
	DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_FCellType();
	DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_DungeonModelBuildState();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FStairInfo();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FGridCellInfo();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FCellDoor();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FCell();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonModel_GetGridCellLookup();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonModel_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonModel();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonBuilder_ContainsCell();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonBuilder_GetCellsOfType();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonBuilder_GetCorridors();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonBuilder_GetRooms();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonBuilder_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonBuilder();
	DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomTileType();
	DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomType();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FIsaacDoor();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FIsaacRoom();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FIsaacRoomLayout();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FIsaacRoomTile();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacDungeonModel_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacDungeonModel();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacDungeonBuilder_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacDungeonBuilder();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FSnapModuleMetaData();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ASnapModuleInfo_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ASnapModuleInfo();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapModule_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapModule();
	DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDungeonLayoutLink();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FSnapDungeonLayoutLink();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonLayoutNode_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonLayoutNode();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonModel_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonModel();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonBuilder_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonBuilder();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UFloorPlanConfig_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UFloorPlanConfig();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonConfig_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonConfig();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacRoomLayoutBuilder_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacRoomLayoutBuilder();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacDungeonConfig_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacDungeonConfig();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonConfig_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonConfig();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonDebug_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonDebug();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonEventListener_OnDungeonDestroyed();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonEventListener_OnDungeonLayoutBuilt();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonEventListener_OnMarkersEmitted();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonEventListener_OnPostDungeonBuild();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonEventListener_OnPreDungeonBuild();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonEventListener_OnPreDungeonDestroy();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonEventListener_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonEventListener();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonInstancedMeshActor_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonInstancedMeshActor();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialOverride();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonMesh_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonMesh();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonModelHelper_ExpandBounds();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonModelHelper_GetCenterExtent();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonModelHelper_GetRectAreaPoints();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonModelHelper_GetRectBorderPoints();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonModelHelper_MakeIntVector();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UDungeonModelHelper_MakeVector();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonModelHelper_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonModelHelper();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_AddPaintCell();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetBoundingBox();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetCellCenter();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetCellConnectedRooms();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetCellMSTRooms();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetDoorExits();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetRandomCellLocation();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetRoomFreeEdge();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_RemovePaintCell();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_ToWorldCoords();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonModelHelper_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonModelHelper();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonParticleSystem_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonParticleSystem();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonPropDataAsset_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonPropDataAsset();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UFloorPlanSelectorLogic_SelectNode();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UFloorPlanSelectorLogic_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UFloorPlanSelectorLogic();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonSelectorLogic_ContainsStair();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonSelectorLogic_IsOnCorner();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonSelectorLogic_IsPassageTooNarrow();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonSelectorLogic_IsPillarOnCorner();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonSelectorLogic_SelectNode();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonSelectorLogic_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonSelectorLogic();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UIsaacDungeonSelectorLogic_SelectNode();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacDungeonSelectorLogic_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacDungeonSelectorLogic();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_USnapDungeonSelectorLogic_SelectNode();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonSelectorLogic_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonSelectorLogic();
	DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_EGridSpatialCellOccupation();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FGridSpatialConstraintCellData();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FGridSpatialConstraint2x2Data();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridSpatialConstraint2x2_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridSpatialConstraint2x2();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FGridSpatialConstraint3x3Data();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridSpatialConstraint3x3_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridSpatialConstraint3x3();
	DUNGEONARCHITECTRUNTIME_API class UScriptStruct* Z_Construct_UScriptStruct_FGridSpatialConstraintEdgeData();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridSpatialConstraintEdge_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridSpatialConstraintEdge();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonToolData_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UDungeonToolData();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UFloorPlanToolData_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UFloorPlanToolData();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonToolData_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonToolData();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacDungeonToolData_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacDungeonToolData();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonToolData_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonToolData();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UFloorPlanTransformLogic_GetNodeOffset();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UFloorPlanTransformLogic_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UFloorPlanTransformLogic();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UGridDungeonTransformLogic_GetNodeOffset();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonTransformLogic_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UGridDungeonTransformLogic();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_UIsaacDungeonTransformLogic_GetNodeOffset();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacDungeonTransformLogic_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UIsaacDungeonTransformLogic();
	DUNGEONARCHITECTRUNTIME_API class UFunction* Z_Construct_UFunction_USnapDungeonTransformLogic_GetNodeOffset();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonTransformLogic_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDungeonTransformLogic();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonVolume_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonVolume();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonMirrorVolume_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonMirrorVolume();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonNegationVolume_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonNegationVolume();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonThemeOverrideVolume_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ADungeonThemeOverrideVolume();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_AFloorPlanDoorVolume_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_AFloorPlanDoorVolume();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_AFloorPlanRoomVolume_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_AFloorPlanRoomVolume();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_AGridDungeonPlatformVolume_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_AGridDungeonPlatformVolume();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USimpleIsaacRoomLayoutBuilder_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USimpleIsaacRoomLayoutBuilder();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UStylizedIsaacRoomLayoutBuilder_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_UStylizedIsaacRoomLayoutBuilder();
	DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_EUSnapDoorMeshType();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDoorMeshInfo_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDoorMeshInfo();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDoorAsset_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_USnapDoorAsset();
	DUNGEONARCHITECTRUNTIME_API class UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDoorMode();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ASnapDoor_NoRegister();
	DUNGEONARCHITECTRUNTIME_API class UClass* Z_Construct_UClass_ASnapDoor();
	DUNGEONARCHITECTRUNTIME_API class UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime();
	UClass* Z_Construct_UClass_UDungeonConfig_NoRegister()
	{
		return UDungeonConfig::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonConfig()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonConfig::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaxBuildTimePerFrameMs = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxBuildTimePerFrameMs"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxBuildTimePerFrameMs, UDungeonConfig), 0x0010000000000005);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(Instanced, UDungeonConfig, bool);
				UProperty* NewProp_Instanced = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Instanced"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Instanced, UDungeonConfig), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(Instanced, UDungeonConfig), sizeof(bool), true);
				UProperty* NewProp_Seed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Seed"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Seed, UDungeonConfig), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/DungeonConfig.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonConfig.h"));
				MetaData->SetValue(NewProp_MaxBuildTimePerFrameMs, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_MaxBuildTimePerFrameMs, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonConfig.h"));
				MetaData->SetValue(NewProp_MaxBuildTimePerFrameMs, TEXT("ToolTip"), TEXT("The dungeon is built asynchronously over multiple frames if this value is > 0.\nIf value is 0, the entire dungeon is built in a single frame (might face lag)\nSet it to a value in milli seconds (e.g. 16-33) to have it built over multiple frames,\nwhile maintaining a smooth frame rate"));
				MetaData->SetValue(NewProp_Instanced, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_Instanced, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonConfig.h"));
				MetaData->SetValue(NewProp_Instanced, TEXT("ToolTip"), TEXT("Generate the dungeon with instanced meshes to improve performance"));
				MetaData->SetValue(NewProp_Seed, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_Seed, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonConfig.h"));
				MetaData->SetValue(NewProp_Seed, TEXT("ToolTip"), TEXT("Changing this number would completely change the layout of the dungeon.\nThis is the base random number seed that is used to build the dungeon"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonConfig(Z_Construct_UClass_UDungeonConfig, &UDungeonConfig::StaticClass, TEXT("UDungeonConfig"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonConfig);
	UScriptStruct* Z_Construct_UScriptStruct_FRectangle()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FRectangle_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("Rectangle"), sizeof(FRectangle), Get_Z_Construct_UScriptStruct_FRectangle_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Rectangle"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FRectangle>, EStructFlags(0x00000201));
			UProperty* NewProp_Size = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Size"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Size, FRectangle), 0x0010000000000005, Z_Construct_UScriptStruct_FIntVector());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, FRectangle), 0x0010000000000005, Z_Construct_UScriptStruct_FIntVector());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/MathUtils.h"));
			MetaData->SetValue(NewProp_Size, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_Size, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/MathUtils.h"));
			MetaData->SetValue(NewProp_Location, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_Location, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/MathUtils.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FRectangle_CRC() { return 4180611617U; }
	UClass* Z_Construct_UClass_UDungeonModel_NoRegister()
	{
		return UDungeonModel::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonModel()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonModel::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/DungeonModel.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonModel.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonModel(Z_Construct_UClass_UDungeonModel, &UDungeonModel::StaticClass, TEXT("UDungeonModel"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonModel);
	UClass* Z_Construct_UClass_UDungeonSelectorLogic_NoRegister()
	{
		return UDungeonSelectorLogic::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonSelectorLogic()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonSelectorLogic::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24301080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Rules/DungeonSelectorLogic.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Rules/DungeonSelectorLogic.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonSelectorLogic(Z_Construct_UClass_UDungeonSelectorLogic, &UDungeonSelectorLogic::StaticClass, TEXT("UDungeonSelectorLogic"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonSelectorLogic);
	UClass* Z_Construct_UClass_UDungeonTransformLogic_NoRegister()
	{
		return UDungeonTransformLogic::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonTransformLogic()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonTransformLogic::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24301080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Rules/DungeonTransformLogic.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Rules/DungeonTransformLogic.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonTransformLogic(Z_Construct_UClass_UDungeonTransformLogic, &UDungeonTransformLogic::StaticClass, TEXT("UDungeonTransformLogic"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonTransformLogic);
	UClass* Z_Construct_UClass_UDungeonSpatialConstraint_NoRegister()
	{
		return UDungeonSpatialConstraint::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonSpatialConstraint()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonSpatialConstraint::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20301081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRotateToFitConstraint, UDungeonSpatialConstraint, bool);
				UProperty* NewProp_bRotateToFitConstraint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRotateToFitConstraint"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRotateToFitConstraint, UDungeonSpatialConstraint), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bRotateToFitConstraint, UDungeonSpatialConstraint), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bApplyBaseRotation, UDungeonSpatialConstraint, bool);
				UProperty* NewProp_bApplyBaseRotation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bApplyBaseRotation"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bApplyBaseRotation, UDungeonSpatialConstraint), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bApplyBaseRotation, UDungeonSpatialConstraint), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/DungeonSpatialConstraint.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonSpatialConstraint.h"));
				MetaData->SetValue(NewProp_bRotateToFitConstraint, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_bRotateToFitConstraint, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonSpatialConstraint.h"));
				MetaData->SetValue(NewProp_bRotateToFitConstraint, TEXT("ToolTip"), TEXT("Should the constraints be rotated to fit the spatial configuration?"));
				MetaData->SetValue(NewProp_bApplyBaseRotation, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_bApplyBaseRotation, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonSpatialConstraint.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonSpatialConstraint(Z_Construct_UClass_UDungeonSpatialConstraint, &UDungeonSpatialConstraint::StaticClass, TEXT("UDungeonSpatialConstraint"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonSpatialConstraint);
	UScriptStruct* Z_Construct_UScriptStruct_FPropTypeData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FPropTypeData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("PropTypeData"), sizeof(FPropTypeData), Get_Z_Construct_UScriptStruct_FPropTypeData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PropTypeData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FPropTypeData>, EStructFlags(0x00000205));
			UProperty* NewProp_ChildSockets = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChildSockets"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ChildSockets, FPropTypeData), 0x0010000000000005);
			UProperty* NewProp_ChildSockets_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ChildSockets, TEXT("ChildSockets"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FPropChildSocketData());
			UProperty* NewProp_SpatialConstraint = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SpatialConstraint"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(SpatialConstraint, FPropTypeData), 0x001000000008000d, Z_Construct_UClass_UDungeonSpatialConstraint_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseSpatialConstraint, FPropTypeData, bool);
			UProperty* NewProp_bUseSpatialConstraint = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseSpatialConstraint"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseSpatialConstraint, FPropTypeData), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bUseSpatialConstraint, FPropTypeData), sizeof(bool), true);
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Offset, FPropTypeData), 0x0010000000000005, Z_Construct_UScriptStruct_FTransform());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ConsumeOnAttach, FPropTypeData, bool);
			UProperty* NewProp_ConsumeOnAttach = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ConsumeOnAttach"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ConsumeOnAttach, FPropTypeData), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(ConsumeOnAttach, FPropTypeData), sizeof(bool), true);
			UProperty* NewProp_TransformLogics = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TransformLogics"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(TransformLogics, FPropTypeData), 0x001000800000000d);
			UProperty* NewProp_TransformLogics_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TransformLogics, TEXT("TransformLogics"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000080008, Z_Construct_UClass_UDungeonTransformLogic_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseTransformLogic, FPropTypeData, bool);
			UProperty* NewProp_bUseTransformLogic = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseTransformLogic"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseTransformLogic, FPropTypeData), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bUseTransformLogic, FPropTypeData), sizeof(bool), true);
			UProperty* NewProp_SelectionLogics = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SelectionLogics"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(SelectionLogics, FPropTypeData), 0x001000800000000d);
			UProperty* NewProp_SelectionLogics_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SelectionLogics, TEXT("SelectionLogics"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000080008, Z_Construct_UClass_UDungeonSelectorLogic_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLogicOverridesAffinity, FPropTypeData, bool);
			UProperty* NewProp_bLogicOverridesAffinity = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bLogicOverridesAffinity"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLogicOverridesAffinity, FPropTypeData), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bLogicOverridesAffinity, FPropTypeData), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseSelectionLogic, FPropTypeData, bool);
			UProperty* NewProp_bUseSelectionLogic = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseSelectionLogic"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseSelectionLogic, FPropTypeData), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bUseSelectionLogic, FPropTypeData), sizeof(bool), true);
			UProperty* NewProp_Probability = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Probability"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Probability, FPropTypeData), 0x0010000000000005);
			UProperty* NewProp_AttachToSocket = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AttachToSocket"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AttachToSocket, FPropTypeData), 0x0010000000000005);
			UProperty* NewProp_AssetObject = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AssetObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AssetObject, FPropTypeData), 0x0010000000000005, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_NodeId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NodeId"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(NodeId, FPropTypeData), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_ChildSockets, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_ChildSockets, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_SpatialConstraint, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_SpatialConstraint, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_SpatialConstraint, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_bUseSpatialConstraint, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_bUseSpatialConstraint, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_Offset, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_Offset, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_ConsumeOnAttach, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_ConsumeOnAttach, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_TransformLogics, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_TransformLogics, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_TransformLogics, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_bUseTransformLogic, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_bUseTransformLogic, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_SelectionLogics, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_SelectionLogics, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_SelectionLogics, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_bLogicOverridesAffinity, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_bLogicOverridesAffinity, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_bUseSelectionLogic, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_bUseSelectionLogic, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_Probability, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_Probability, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_AttachToSocket, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_AttachToSocket, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_AssetObject, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_AssetObject, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_NodeId, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPropTypeData_CRC() { return 665386897U; }
	UScriptStruct* Z_Construct_UScriptStruct_FPropChildSocketData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FPropChildSocketData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("PropChildSocketData"), sizeof(FPropChildSocketData), Get_Z_Construct_UScriptStruct_FPropChildSocketData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PropChildSocketData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FPropChildSocketData>, EStructFlags(0x00000201));
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Offset, FPropChildSocketData), 0x0010000000000005, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_SocketType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SocketType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SocketType, FPropChildSocketData), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Props can emit new sockets when they are inserted, to add more child props relative to them"));
			MetaData->SetValue(NewProp_Offset, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_Offset, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
			MetaData->SetValue(NewProp_SocketType, TEXT("Category"), TEXT("DungeonProp"));
			MetaData->SetValue(NewProp_SocketType, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPropChildSocketData_CRC() { return 2972057051U; }
	UScriptStruct* Z_Construct_UScriptStruct_FPropSocket()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FPropSocket_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("PropSocket"), sizeof(FPropSocket), Get_Z_Construct_UScriptStruct_FPropSocket_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PropSocket"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FPropSocket>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonProp.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPropSocket_CRC() { return 88653341U; }
	UClass* Z_Construct_UClass_UDungeonEditorViewportProperties_NoRegister()
	{
		return UDungeonEditorViewportProperties::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonEditorViewportProperties()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonEditorViewportProperties::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BuilderClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BuilderClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(BuilderClass, UDungeonEditorViewportProperties), 0x0014000000000005, Z_Construct_UClass_UDungeonBuilder_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_MarkerEmitters = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MarkerEmitters"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MarkerEmitters, UDungeonEditorViewportProperties), 0x001002800000000d);
				UProperty* NewProp_MarkerEmitters_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MarkerEmitters, TEXT("MarkerEmitters"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0002000000080008, Z_Construct_UClass_UDungeonMarkerEmitter_NoRegister());
				UProperty* NewProp_DungeonConfig = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DungeonConfig"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DungeonConfig, UDungeonEditorViewportProperties), 0x0010000000000004, Z_Construct_UClass_UDungeonConfig_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Utils/DungeonEditorViewportProperties.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/DungeonEditorViewportProperties.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_BuilderClass, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_BuilderClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/DungeonEditorViewportProperties.h"));
				MetaData->SetValue(NewProp_BuilderClass, TEXT("ToolTip"), TEXT("Lets you swap out the default dungeon builder with your own implementation"));
				MetaData->SetValue(NewProp_MarkerEmitters, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_MarkerEmitters, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MarkerEmitters, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/DungeonEditorViewportProperties.h"));
				MetaData->SetValue(NewProp_MarkerEmitters, TEXT("ToolTip"), TEXT("Lets you emit your own markers into the scene"));
				MetaData->SetValue(NewProp_MarkerEmitters_Inner, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_MarkerEmitters_Inner, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MarkerEmitters_Inner, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/DungeonEditorViewportProperties.h"));
				MetaData->SetValue(NewProp_MarkerEmitters_Inner, TEXT("ToolTip"), TEXT("Lets you emit your own markers into the scene"));
				MetaData->SetValue(NewProp_DungeonConfig, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_DungeonConfig, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/DungeonEditorViewportProperties.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonEditorViewportProperties(Z_Construct_UClass_UDungeonEditorViewportProperties, &UDungeonEditorViewportProperties::StaticClass, TEXT("UDungeonEditorViewportProperties"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonEditorViewportProperties);
	UClass* Z_Construct_UClass_UDungeonThemeAsset_NoRegister()
	{
		return UDungeonThemeAsset::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonThemeAsset()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonThemeAsset::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_PreviewViewportProperties = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PreviewViewportProperties"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PreviewViewportProperties, UDungeonThemeAsset), 0x0010000800000000, Z_Construct_UClass_UDungeonEditorViewportProperties_NoRegister());
				UProperty* NewProp_UpdateGraph = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UpdateGraph"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(UpdateGraph, UDungeonThemeAsset), 0x0010000800000000, Z_Construct_UClass_UEdGraph_NoRegister());
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_Props = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Props"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Props, UDungeonThemeAsset), 0x0010008000000000);
				UProperty* NewProp_Props_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Props, TEXT("Props"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000008000000000, Z_Construct_UScriptStruct_FPropTypeData());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("DungeonThemeAsset.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/DungeonThemeAsset.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A Dungeon Theme asset lets you design the look and feel of you dungeon with an intuitive graph based approach"));
				MetaData->SetValue(NewProp_PreviewViewportProperties, TEXT("ModuleRelativePath"), TEXT("Public/DungeonThemeAsset.h"));
				MetaData->SetValue(NewProp_UpdateGraph, TEXT("ModuleRelativePath"), TEXT("Public/DungeonThemeAsset.h"));
				MetaData->SetValue(NewProp_UpdateGraph, TEXT("ToolTip"), TEXT("EdGraph based representation"));
				MetaData->SetValue(NewProp_Props, TEXT("ModuleRelativePath"), TEXT("Public/DungeonThemeAsset.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonThemeAsset(Z_Construct_UClass_UDungeonThemeAsset, &UDungeonThemeAsset::StaticClass, TEXT("UDungeonThemeAsset"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonThemeAsset);
	UFunction* Z_Construct_UFunction_UDungeonBuilder_EmitDungeonMarkers()
	{
		UObject* Outer=Z_Construct_UClass_UDungeonBuilder();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EmitDungeonMarkers"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonBuilder.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDungeonBuilder_EmitMarker()
	{
		struct DungeonBuilder_eventEmitMarker_Parms
		{
			FString SocketType;
			FTransform Transform;
		};
		UObject* Outer=Z_Construct_UClass_UDungeonBuilder();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EmitMarker"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C20401, 65535, sizeof(DungeonBuilder_eventEmitMarker_Parms));
			UProperty* NewProp_Transform = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Transform"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Transform, DungeonBuilder_eventEmitMarker_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_SocketType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SocketType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SocketType, DungeonBuilder_eventEmitMarker_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonBuilder.h"));
			MetaData->SetValue(NewProp_Transform, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_SocketType, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDungeonBuilder_GetMarkers()
	{
		struct DungeonBuilder_eventGetMarkers_Parms
		{
			TArray<FPropSocket> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UDungeonBuilder();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetMarkers"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(DungeonBuilder_eventGetMarkers_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, DungeonBuilder_eventGetMarkers_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FPropSocket());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonBuilder.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UDungeonBuilder_NoRegister()
	{
		return UDungeonBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;

				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonBuilder_EmitDungeonMarkers());
				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonBuilder_EmitMarker());
				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonBuilder_GetMarkers());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonBuilder_EmitDungeonMarkers(), "EmitDungeonMarkers"); // 2757655962
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonBuilder_EmitMarker(), "EmitMarker"); // 1738028625
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonBuilder_GetMarkers(), "GetMarkers"); // 4137013720
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/DungeonBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonBuilder.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonBuilder(Z_Construct_UClass_UDungeonBuilder, &UDungeonBuilder::StaticClass, TEXT("UDungeonBuilder"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonBuilder);
	UFunction* Z_Construct_UFunction_UDungeonMarkerEmitter_EmitMarkers()
	{
		UObject* Outer=Z_Construct_UClass_UDungeonMarkerEmitter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EmitMarkers"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535, sizeof(DungeonMarkerEmitter_eventEmitMarkers_Parms));
			UProperty* NewProp_Config = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Config"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Config, DungeonMarkerEmitter_eventEmitMarkers_Parms), 0x0010000000000080, Z_Construct_UClass_UDungeonConfig_NoRegister());
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, DungeonMarkerEmitter_eventEmitMarkers_Parms), 0x0010000000000080, Z_Construct_UClass_UDungeonModel_NoRegister());
			UProperty* NewProp_Builder = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Builder"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Builder, DungeonMarkerEmitter_eventEmitMarkers_Parms), 0x0010000000000080, Z_Construct_UClass_UDungeonBuilder_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/Markers/DungeonMarkerEmitter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called by the theming engine to emit markers"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UDungeonMarkerEmitter_NoRegister()
	{
		return UDungeonMarkerEmitter::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonMarkerEmitter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonMarkerEmitter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20301081;

				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonMarkerEmitter_EmitMarkers());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonMarkerEmitter_EmitMarkers(), "EmitMarkers"); // 4228517371
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Markers/DungeonMarkerEmitter.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Markers/DungeonMarkerEmitter.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implement this class in blueprint (or C++) to emit your own custom markers in the scene"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonMarkerEmitter(Z_Construct_UClass_UDungeonMarkerEmitter, &UDungeonMarkerEmitter::StaticClass, TEXT("UDungeonMarkerEmitter"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonMarkerEmitter);
	UFunction* Z_Construct_UDelegateFunction_DungeonArchitectRuntime_DungeonBuildCompleteBindableEvent__DelegateSignature()
	{
		struct _Script_DungeonArchitectRuntime_eventDungeonBuildCompleteBindableEvent_Parms
		{
			ADungeon* Dungeon;
		};
		UObject* Outer=Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DungeonBuildCompleteBindableEvent__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_DungeonArchitectRuntime_eventDungeonBuildCompleteBindableEvent_Parms));
			UProperty* NewProp_Dungeon = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Dungeon"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Dungeon, _Script_DungeonArchitectRuntime_eventDungeonBuildCompleteBindableEvent_Parms), 0x0010000000000080, Z_Construct_UClass_ADungeon_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADungeon_BuildDungeon()
	{
		UObject* Outer=Z_Construct_UClass_ADungeon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BuildDungeon"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADungeon_DestroyDungeon()
	{
		UObject* Outer=Z_Construct_UClass_ADungeon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DestroyDungeon"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADungeon_RebuildNavigation()
	{
		UObject* Outer=Z_Construct_UClass_ADungeon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RebuildNavigation"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ADungeon_NoRegister()
	{
		return ADungeon::StaticClass();
	}
	UClass* Z_Construct_UClass_ADungeon()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = ADungeon::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ADungeon_BuildDungeon());
				OuterClass->LinkChild(Z_Construct_UFunction_ADungeon_DestroyDungeon());
				OuterClass->LinkChild(Z_Construct_UFunction_ADungeon_RebuildNavigation());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ToolData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ToolData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ToolData, ADungeon), 0x0010000000000000, Z_Construct_UClass_UDungeonToolData_NoRegister());
				UProperty* NewProp_DungeonModel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DungeonModel"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DungeonModel, ADungeon), 0x0010000000000014, Z_Construct_UClass_UDungeonModel_NoRegister());
				UProperty* NewProp_Config = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Config"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Config, ADungeon), 0x0010000000000005, Z_Construct_UClass_UDungeonConfig_NoRegister());
				UProperty* NewProp_Builder = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Builder"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Builder, ADungeon), 0x0010000000000014, Z_Construct_UClass_UDungeonBuilder_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDrawDebugData, ADungeon, bool);
				UProperty* NewProp_bDrawDebugData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDrawDebugData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDrawDebugData, ADungeon), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bDrawDebugData, ADungeon), sizeof(bool), true);
				UProperty* NewProp_BuilderClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BuilderClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(BuilderClass, ADungeon), 0x0014000000000005, Z_Construct_UClass_UDungeonBuilder_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_BuildPriorityLocation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BuildPriorityLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(BuildPriorityLocation, ADungeon), 0x0010000000000004, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_EventListeners = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EventListeners"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(EventListeners, ADungeon), 0x001002800000000d);
				UProperty* NewProp_EventListeners_Inner = new(EC_InternalUseOnlyConstructor, NewProp_EventListeners, TEXT("EventListeners"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0002000000080008, Z_Construct_UClass_UDungeonEventListener_NoRegister());
				UProperty* NewProp_MarkerEmitters = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MarkerEmitters"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MarkerEmitters, ADungeon), 0x001002800000000d);
				UProperty* NewProp_MarkerEmitters_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MarkerEmitters, TEXT("MarkerEmitters"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0002000000080008, Z_Construct_UClass_UDungeonMarkerEmitter_NoRegister());
				UProperty* NewProp_Themes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Themes"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Themes, ADungeon), 0x0010000000000005);
				UProperty* NewProp_Themes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Themes, TEXT("Themes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UDungeonThemeAsset_NoRegister());
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_SpriteComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpriteComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(SpriteComponent, ADungeon), 0x0010000800080008, Z_Construct_UClass_UBillboardComponent_NoRegister());
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_Uid = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Uid"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Uid, ADungeon), 0x0010000000000000, Z_Construct_UScriptStruct_FGuid());
				UProperty* NewProp_OnDungeonBuildComplete = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnDungeonBuildComplete"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnDungeonBuildComplete, ADungeon), 0x0010000010080000, Z_Construct_UDelegateFunction_DungeonArchitectRuntime_DungeonBuildCompleteBindableEvent__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADungeon_BuildDungeon(), "BuildDungeon"); // 3974815602
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADungeon_DestroyDungeon(), "DestroyDungeon"); // 3928859524
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADungeon_RebuildNavigation(), "RebuildNavigation"); // 737237766
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Rendering Input Actor Misc"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Dungeon.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("false"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("The main dungeon actor responsible for creating a dungeon.\nDrop this actor into your scene, assign a theme and click \"Build Dungeon\" button\nto create your dungeon.\nFrom code, call ADungeon::BuildDungeon after adding an entry into the ADungeon::Themes array"));
				MetaData->SetValue(NewProp_ToolData, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_DungeonModel, TEXT("Category"), TEXT("Misc"));
				MetaData->SetValue(NewProp_DungeonModel, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_Config, TEXT("Category"), TEXT("Misc"));
				MetaData->SetValue(NewProp_Config, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_Builder, TEXT("Category"), TEXT("Misc"));
				MetaData->SetValue(NewProp_Builder, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_bDrawDebugData, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_bDrawDebugData, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_BuilderClass, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_BuilderClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_BuilderClass, TEXT("ToolTip"), TEXT("Lets you swap out the default dungeon builder with your own implementation"));
				MetaData->SetValue(NewProp_BuildPriorityLocation, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_BuildPriorityLocation, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_BuildPriorityLocation, TEXT("ToolTip"), TEXT("When the dungeon is built asynchronously over multiple frames, objects closer to this point are built first"));
				MetaData->SetValue(NewProp_EventListeners, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_EventListeners, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_EventListeners, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_EventListeners_Inner, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_EventListeners_Inner, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_EventListeners_Inner, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_MarkerEmitters, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_MarkerEmitters, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MarkerEmitters, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_MarkerEmitters, TEXT("ToolTip"), TEXT("Lets you emit your own markers into the scene"));
				MetaData->SetValue(NewProp_MarkerEmitters_Inner, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_MarkerEmitters_Inner, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MarkerEmitters_Inner, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_MarkerEmitters_Inner, TEXT("ToolTip"), TEXT("Lets you emit your own markers into the scene"));
				MetaData->SetValue(NewProp_Themes, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_Themes, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_SpriteComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_SpriteComponent, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_Uid, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
				MetaData->SetValue(NewProp_OnDungeonBuildComplete, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_OnDungeonBuildComplete, TEXT("ModuleRelativePath"), TEXT("Public/Core/Dungeon.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ADungeon(Z_Construct_UClass_ADungeon, &ADungeon::StaticClass, TEXT("ADungeon"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ADungeon);
	UClass* Z_Construct_UClass_UDungeonActorSelector_NoRegister()
	{
		return UDungeonActorSelector::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonActorSelector()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonActorSelector::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24301080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Transition/Rules/DungeonActorSelector.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Transition/Rules/DungeonActorSelector.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonActorSelector(Z_Construct_UClass_UDungeonActorSelector, &UDungeonActorSelector::StaticClass, TEXT("UDungeonActorSelector"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonActorSelector);
	UClass* Z_Construct_UClass_UFloorPlanModel_NoRegister()
	{
		return UFloorPlanModel::StaticClass();
	}
	UClass* Z_Construct_UClass_UFloorPlanModel()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonModel();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UFloorPlanModel::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/FloorPlan/FloorPlanModel.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanModel.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Floor plan model"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFloorPlanModel(Z_Construct_UClass_UFloorPlanModel, &UFloorPlanModel::StaticClass, TEXT("UFloorPlanModel"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFloorPlanModel);
	UClass* Z_Construct_UClass_UFloorPlanBuilder_NoRegister()
	{
		return UFloorPlanBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_UFloorPlanBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonBuilder();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UFloorPlanBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/FloorPlan/FloorPlanBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanBuilder.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFloorPlanBuilder(Z_Construct_UClass_UFloorPlanBuilder, &UFloorPlanBuilder::StaticClass, TEXT("UFloorPlanBuilder"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFloorPlanBuilder);
	UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_FCellType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_FCellType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("FCellType"), 0, Get_Z_Construct_UEnum_DungeonArchitectRuntime_FCellType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FCellType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FCellType::Room")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FCellType::Corridor")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FCellType::CorridorPadding")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FCellType::Unknown")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FCellType::FCellType_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("FCellType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Corridor.DisplayName"), TEXT("Corridor"));
			MetaData->SetValue(ReturnEnum, TEXT("CorridorPadding.DisplayName"), TEXT("CorridorPadding"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Room.DisplayName"), TEXT("Room"));
			MetaData->SetValue(ReturnEnum, TEXT("Unknown.DisplayName"), TEXT("Unknown"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_FCellType_CRC() { return 3365383833U; }
	UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_DungeonModelBuildState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_DungeonModelBuildState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("DungeonModelBuildState"), 0, Get_Z_Construct_UEnum_DungeonArchitectRuntime_DungeonModelBuildState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DungeonModelBuildState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("DungeonModelBuildState::Initial")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("DungeonModelBuildState::Separation")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("DungeonModelBuildState::Triangulation")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("DungeonModelBuildState::SpanningTree")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("DungeonModelBuildState::Corridors")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("DungeonModelBuildState::Complete")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("DungeonModelBuildState::DungeonModelBuildState_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("DungeonModelBuildState");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Complete.DisplayName"), TEXT("Complete"));
			MetaData->SetValue(ReturnEnum, TEXT("Corridors.DisplayName"), TEXT("Corridors"));
			MetaData->SetValue(ReturnEnum, TEXT("Initial.DisplayName"), TEXT("Initial"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Separation.DisplayName"), TEXT("Separation"));
			MetaData->SetValue(ReturnEnum, TEXT("SpanningTree.DisplayName"), TEXT("SpanningTree"));
			MetaData->SetValue(ReturnEnum, TEXT("Triangulation.DisplayName"), TEXT("Triangulation"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_DungeonModelBuildState_CRC() { return 524029825U; }
	UScriptStruct* Z_Construct_UScriptStruct_FStairInfo()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FStairInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("StairInfo"), sizeof(FStairInfo), Get_Z_Construct_UScriptStruct_FStairInfo_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StairInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FStairInfo>, EStructFlags(0x00000201));
			UProperty* NewProp_IPosition = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("IPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(IPosition, FStairInfo), 0x0010000000000000, Z_Construct_UScriptStruct_FIntVector());
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, FStairInfo), 0x0010000000000000, Z_Construct_UScriptStruct_FQuat());
			UProperty* NewProp_Position = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Position"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Position, FStairInfo), 0x0010000000000000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_ConnectedToCell = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ConnectedToCell"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ConnectedToCell, FStairInfo), 0x0010000000000000);
			UProperty* NewProp_OwnerCell = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OwnerCell"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(OwnerCell, FStairInfo), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(NewProp_IPosition, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(NewProp_Rotation, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(NewProp_Position, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(NewProp_ConnectedToCell, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(NewProp_OwnerCell, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FStairInfo_CRC() { return 2334983250U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGridCellInfo()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FGridCellInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GridCellInfo"), sizeof(FGridCellInfo), Get_Z_Construct_UScriptStruct_FGridCellInfo_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GridCellInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGridCellInfo>, EStructFlags(0x00000201));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ContainsDoor, FGridCellInfo, bool);
			UProperty* NewProp_ContainsDoor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ContainsDoor"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ContainsDoor, FGridCellInfo), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(ContainsDoor, FGridCellInfo), sizeof(bool), true);
			UProperty* NewProp_CellType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CellType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(CellType, FGridCellInfo), 0x0010000000000005, Z_Construct_UEnum_DungeonArchitectRuntime_FCellType());
			UProperty* NewProp_CellId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CellId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(CellId, FGridCellInfo), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Holds metadata about each occupied grid in the cell for quick reference from a lookup"));
			MetaData->SetValue(NewProp_ContainsDoor, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_ContainsDoor, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(NewProp_CellType, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_CellType, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(NewProp_CellId, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_CellId, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGridCellInfo_CRC() { return 1517395570U; }
	UScriptStruct* Z_Construct_UScriptStruct_FCellDoor()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FCellDoor_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("CellDoor"), sizeof(FCellDoor), Get_Z_Construct_UScriptStruct_FCellDoor_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CellDoor"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FCellDoor>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCellDoor_CRC() { return 2988731263U; }
	UScriptStruct* Z_Construct_UScriptStruct_FCell()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FCell_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("Cell"), sizeof(FCell), Get_Z_Construct_UScriptStruct_FCell_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Cell"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FCell>, EStructFlags(0x00000201));
			UProperty* NewProp_FixedRoomConnections = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FixedRoomConnections"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(FixedRoomConnections, FCell), 0x0010000000000005);
			UProperty* NewProp_FixedRoomConnections_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FixedRoomConnections, TEXT("FixedRoomConnections"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_ConnectedRooms = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ConnectedRooms"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ConnectedRooms, FCell), 0x0010000000000005);
			UProperty* NewProp_ConnectedRooms_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ConnectedRooms, TEXT("ConnectedRooms"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(UserDefined, FCell, bool);
			UProperty* NewProp_UserDefined = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UserDefined"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(UserDefined, FCell), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(UserDefined, FCell), sizeof(bool), true);
			UProperty* NewProp_CellType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CellType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(CellType, FCell), 0x0010000000000005, Z_Construct_UEnum_DungeonArchitectRuntime_FCellType());
			UProperty* NewProp_Bounds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Bounds"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Bounds, FCell), 0x0010000000000005, Z_Construct_UScriptStruct_FRectangle());
			UProperty* NewProp_Id = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Id"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Id, FCell), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(NewProp_FixedRoomConnections, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_FixedRoomConnections, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(NewProp_ConnectedRooms, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_ConnectedRooms, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(NewProp_UserDefined, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_UserDefined, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(NewProp_CellType, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_CellType, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(NewProp_Bounds, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_Bounds, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
			MetaData->SetValue(NewProp_Id, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_Id, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCell_CRC() { return 1460553387U; }
	UFunction* Z_Construct_UFunction_UGridDungeonModel_GetGridCellLookup()
	{
		struct GridDungeonModel_eventGetGridCellLookup_Parms
		{
			int32 x;
			int32 y;
			FGridCellInfo ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonModel();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetGridCellLookup"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(GridDungeonModel_eventGetGridCellLookup_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, GridDungeonModel_eventGetGridCellLookup_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FGridCellInfo());
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(y, GridDungeonModel_eventGetGridCellLookup_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(x, GridDungeonModel_eventGetGridCellLookup_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGridDungeonModel_NoRegister()
	{
		return UGridDungeonModel::StaticClass();
	}
	UClass* Z_Construct_UClass_UGridDungeonModel()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonModel();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UGridDungeonModel::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonModel_GetGridCellLookup());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Doors = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Doors"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Doors, UGridDungeonModel), 0x0010000000000005);
				UProperty* NewProp_Doors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Doors, TEXT("Doors"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FCellDoor());
				UProperty* NewProp_Cells = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Cells"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Cells, UGridDungeonModel), 0x0010000000000005);
				UProperty* NewProp_Cells_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Cells, TEXT("Cells"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FCell());
				UProperty* NewProp_BuildState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BuildState"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(BuildState, UGridDungeonModel), 0x0010000000000015, Z_Construct_UEnum_DungeonArchitectRuntime_DungeonModelBuildState());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonModel_GetGridCellLookup(), "GetGridCellLookup"); // 3159531602
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Grid/GridDungeonModel.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
				MetaData->SetValue(NewProp_Doors, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_Doors, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
				MetaData->SetValue(NewProp_Cells, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_Cells, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
				MetaData->SetValue(NewProp_BuildState, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_BuildState, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModel.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGridDungeonModel(Z_Construct_UClass_UGridDungeonModel, &UGridDungeonModel::StaticClass, TEXT("UGridDungeonModel"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGridDungeonModel);
	UFunction* Z_Construct_UFunction_UGridDungeonBuilder_ContainsCell()
	{
		struct GridDungeonBuilder_eventContainsCell_Parms
		{
			int32 x;
			int32 y;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonBuilder();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ContainsCell"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GridDungeonBuilder_eventContainsCell_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GridDungeonBuilder_eventContainsCell_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GridDungeonBuilder_eventContainsCell_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GridDungeonBuilder_eventContainsCell_Parms), sizeof(bool), true);
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(y, GridDungeonBuilder_eventContainsCell_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(x, GridDungeonBuilder_eventContainsCell_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonBuilder.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonBuilder_GetCellsOfType()
	{
		struct GridDungeonBuilder_eventGetCellsOfType_Parms
		{
			FCellType CellType;
			TArray<FCell> Cells;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonBuilder();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetCellsOfType"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14420401, 65535, sizeof(GridDungeonBuilder_eventGetCellsOfType_Parms));
			UProperty* NewProp_Cells = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Cells"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Cells, GridDungeonBuilder_eventGetCellsOfType_Parms), 0x0010000000000180);
			UProperty* NewProp_Cells_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Cells, TEXT("Cells"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FCell());
			UProperty* NewProp_CellType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CellType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(CellType, GridDungeonBuilder_eventGetCellsOfType_Parms), 0x0010000000000080, Z_Construct_UEnum_DungeonArchitectRuntime_FCellType());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonBuilder.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonBuilder_GetCorridors()
	{
		struct GridDungeonBuilder_eventGetCorridors_Parms
		{
			TArray<FCell> CorridorCells;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonBuilder();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetCorridors"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14420401, 65535, sizeof(GridDungeonBuilder_eventGetCorridors_Parms));
			UProperty* NewProp_CorridorCells = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CorridorCells"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(CorridorCells, GridDungeonBuilder_eventGetCorridors_Parms), 0x0010000000000180);
			UProperty* NewProp_CorridorCells_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CorridorCells, TEXT("CorridorCells"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FCell());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonBuilder.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonBuilder_GetRooms()
	{
		struct GridDungeonBuilder_eventGetRooms_Parms
		{
			TArray<FCell> RoomCells;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonBuilder();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetRooms"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14420401, 65535, sizeof(GridDungeonBuilder_eventGetRooms_Parms));
			UProperty* NewProp_RoomCells = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RoomCells"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(RoomCells, GridDungeonBuilder_eventGetRooms_Parms), 0x0010000000000180);
			UProperty* NewProp_RoomCells_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RoomCells, TEXT("RoomCells"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FCell());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonBuilder.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGridDungeonBuilder_NoRegister()
	{
		return UGridDungeonBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_UGridDungeonBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonBuilder();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UGridDungeonBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonBuilder_ContainsCell());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonBuilder_GetCellsOfType());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonBuilder_GetCorridors());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonBuilder_GetRooms());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonBuilder_ContainsCell(), "ContainsCell"); // 2327146498
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonBuilder_GetCellsOfType(), "GetCellsOfType"); // 1932964938
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonBuilder_GetCorridors(), "GetCorridors"); // 2226901106
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonBuilder_GetRooms(), "GetRooms"); // 3259025519
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Grid/GridDungeonBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonBuilder.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGridDungeonBuilder(Z_Construct_UClass_UGridDungeonBuilder, &UGridDungeonBuilder::StaticClass, TEXT("UGridDungeonBuilder"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGridDungeonBuilder);
	UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomTileType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomTileType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EIsaacRoomTileType"), 0, Get_Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomTileType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EIsaacRoomTileType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EIsaacRoomTileType::Floor")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EIsaacRoomTileType::Door")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EIsaacRoomTileType::Empty")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EIsaacRoomTileType::EIsaacRoomTileType_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EIsaacRoomTileType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Door.DisplayName"), TEXT("Door"));
			MetaData->SetValue(ReturnEnum, TEXT("Empty.DisplayName"), TEXT("Empty"));
			MetaData->SetValue(ReturnEnum, TEXT("Floor.DisplayName"), TEXT("Floor"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomTileType_CRC() { return 2691008144U; }
	UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EIsaacRoomType"), 0, Get_Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EIsaacRoomType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EIsaacRoomType::Normal")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EIsaacRoomType::Spawn")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EIsaacRoomType::Treasure")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EIsaacRoomType::Boss")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EIsaacRoomType::Exit")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EIsaacRoomType::EIsaacRoomType_MAX")), 9));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EIsaacRoomType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Boss.DisplayName"), TEXT("Boss"));
			MetaData->SetValue(ReturnEnum, TEXT("Exit.DisplayName"), TEXT("Exit"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Normal.DisplayName"), TEXT("Normal"));
			MetaData->SetValue(ReturnEnum, TEXT("Spawn.DisplayName"), TEXT("Spawn"));
			MetaData->SetValue(ReturnEnum, TEXT("Treasure.DisplayName"), TEXT("Treasure"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomType_CRC() { return 1366657177U; }
	UScriptStruct* Z_Construct_UScriptStruct_FIsaacDoor()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FIsaacDoor_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("IsaacDoor"), sizeof(FIsaacDoor), Get_Z_Construct_UScriptStruct_FIsaacDoor_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsaacDoor"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FIsaacDoor>, EStructFlags(0x00000201));
			UProperty* NewProp_ratio = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ratio"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ratio, FIsaacDoor), 0x0010000000000005);
			UProperty* NewProp_roomB = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("roomB"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(roomB, FIsaacDoor), 0x0010000000000005);
			UProperty* NewProp_roomA = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("roomA"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(roomA, FIsaacDoor), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(NewProp_ratio, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_ratio, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(NewProp_roomB, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_roomB, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(NewProp_roomA, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_roomA, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FIsaacDoor_CRC() { return 3420185U; }
	UScriptStruct* Z_Construct_UScriptStruct_FIsaacRoom()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FIsaacRoom_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("IsaacRoom"), sizeof(FIsaacRoom), Get_Z_Construct_UScriptStruct_FIsaacRoom_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsaacRoom"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FIsaacRoom>, EStructFlags(0x00000201));
			UProperty* NewProp_DoorPositions = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DoorPositions"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(DoorPositions, FIsaacRoom), 0x0010000000000005);
			UProperty* NewProp_DoorPositions_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DoorPositions, TEXT("DoorPositions"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FIntVector());
			UProperty* NewProp_AdjacentRooms = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AdjacentRooms"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(AdjacentRooms, FIsaacRoom), 0x0010000000000005);
			UProperty* NewProp_AdjacentRooms_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AdjacentRooms, TEXT("AdjacentRooms"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_Layout = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Layout"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Layout, FIsaacRoom), 0x0010000000000005, Z_Construct_UScriptStruct_FIsaacRoomLayout());
			UProperty* NewProp_RoomType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RoomType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(RoomType, FIsaacRoom), 0x0010000000000005, Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomType());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, FIsaacRoom), 0x0010000000000005, Z_Construct_UScriptStruct_FIntVector());
			UProperty* NewProp_Id = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Id"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Id, FIsaacRoom), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(NewProp_DoorPositions, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_DoorPositions, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(NewProp_AdjacentRooms, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_AdjacentRooms, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(NewProp_Layout, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_Layout, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(NewProp_RoomType, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_RoomType, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(NewProp_Location, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_Location, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(NewProp_Id, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_Id, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FIsaacRoom_CRC() { return 3026861300U; }
	UScriptStruct* Z_Construct_UScriptStruct_FIsaacRoomLayout()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FIsaacRoomLayout_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("IsaacRoomLayout"), sizeof(FIsaacRoomLayout), Get_Z_Construct_UScriptStruct_FIsaacRoomLayout_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsaacRoomLayout"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FIsaacRoomLayout>, EStructFlags(0x00000201));
			UProperty* NewProp_Height = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Height"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Height, FIsaacRoomLayout), 0x0010000000000000);
			UProperty* NewProp_Width = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Width"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Width, FIsaacRoomLayout), 0x0010000000000000);
			UProperty* NewProp_Tiles = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Tiles"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Tiles, FIsaacRoomLayout), 0x0010000000000000);
			UProperty* NewProp_Tiles_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Tiles, TEXT("Tiles"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FIsaacRoomTile());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(NewProp_Height, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(NewProp_Width, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(NewProp_Tiles, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FIsaacRoomLayout_CRC() { return 1440824149U; }
	UScriptStruct* Z_Construct_UScriptStruct_FIsaacRoomTile()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FIsaacRoomTile_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("IsaacRoomTile"), sizeof(FIsaacRoomTile), Get_Z_Construct_UScriptStruct_FIsaacRoomTile_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsaacRoomTile"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FIsaacRoomTile>, EStructFlags(0x00000201));
			UProperty* NewProp_tileType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("tileType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(tileType, FIsaacRoomTile), 0x0010000000000000, Z_Construct_UEnum_DungeonArchitectRuntime_EIsaacRoomTileType());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
			MetaData->SetValue(NewProp_tileType, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FIsaacRoomTile_CRC() { return 2081189228U; }
	UClass* Z_Construct_UClass_UIsaacDungeonModel_NoRegister()
	{
		return UIsaacDungeonModel::StaticClass();
	}
	UClass* Z_Construct_UClass_UIsaacDungeonModel()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonModel();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UIsaacDungeonModel::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Doors = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Doors"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Doors, UIsaacDungeonModel), 0x0010000000000005);
				UProperty* NewProp_Doors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Doors, TEXT("Doors"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FIsaacDoor());
				UProperty* NewProp_Rooms = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Rooms"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Rooms, UIsaacDungeonModel), 0x0010000000000005);
				UProperty* NewProp_Rooms_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Rooms, TEXT("Rooms"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FIsaacRoom());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Isaac/IsaacDungeonModel.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
				MetaData->SetValue(NewProp_Doors, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_Doors, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
				MetaData->SetValue(NewProp_Rooms, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_Rooms, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonModel.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UIsaacDungeonModel(Z_Construct_UClass_UIsaacDungeonModel, &UIsaacDungeonModel::StaticClass, TEXT("UIsaacDungeonModel"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UIsaacDungeonModel);
	UClass* Z_Construct_UClass_UIsaacDungeonBuilder_NoRegister()
	{
		return UIsaacDungeonBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_UIsaacDungeonBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonBuilder();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UIsaacDungeonBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Isaac/IsaacDungeonBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonBuilder.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UIsaacDungeonBuilder(Z_Construct_UClass_UIsaacDungeonBuilder, &UIsaacDungeonBuilder::StaticClass, TEXT("UIsaacDungeonBuilder"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UIsaacDungeonBuilder);
	UScriptStruct* Z_Construct_UScriptStruct_FSnapModuleMetaData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FSnapModuleMetaData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SnapModuleMetaData"), sizeof(FSnapModuleMetaData), Get_Z_Construct_UScriptStruct_FSnapModuleMetaData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SnapModuleMetaData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSnapModuleMetaData>, EStructFlags(0x00000201));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanBeEndNode, FSnapModuleMetaData, bool);
			UProperty* NewProp_bCanBeEndNode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bCanBeEndNode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanBeEndNode, FSnapModuleMetaData), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bCanBeEndNode, FSnapModuleMetaData), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bContributesToModuleCount, FSnapModuleMetaData, bool);
			UProperty* NewProp_bContributesToModuleCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bContributesToModuleCount"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bContributesToModuleCount, FSnapModuleMetaData), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bContributesToModuleCount, FSnapModuleMetaData), sizeof(bool), true);
			UProperty* NewProp_ModuleType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ModuleType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ModuleType, FSnapModuleMetaData), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapModuleInfo.h"));
			MetaData->SetValue(NewProp_bCanBeEndNode, TEXT("Category"), TEXT("SnapModule"));
			MetaData->SetValue(NewProp_bCanBeEndNode, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapModuleInfo.h"));
			MetaData->SetValue(NewProp_bCanBeEndNode, TEXT("ToolTip"), TEXT("Indicates if this module can be an end node (i.e. has only one connected door).\nYou might want to uncheck this for your corridor nodes since you want them to connect two or more modules"));
			MetaData->SetValue(NewProp_bContributesToModuleCount, TEXT("Category"), TEXT("SnapModule"));
			MetaData->SetValue(NewProp_bContributesToModuleCount, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapModuleInfo.h"));
			MetaData->SetValue(NewProp_ModuleType, TEXT("Category"), TEXT("SnapModule"));
			MetaData->SetValue(NewProp_ModuleType, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapModuleInfo.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSnapModuleMetaData_CRC() { return 2961859577U; }
	UClass* Z_Construct_UClass_ASnapModuleInfo_NoRegister()
	{
		return ASnapModuleInfo::StaticClass();
	}
	UClass* Z_Construct_UClass_ASnapModuleInfo()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = ASnapModuleInfo::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ModuleInfo = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ModuleInfo, ASnapModuleInfo), 0x0010000000000005, Z_Construct_UScriptStruct_FSnapModuleMetaData());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Snap/Module/SnapModuleInfo.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapModuleInfo.h"));
				MetaData->SetValue(NewProp_ModuleInfo, TEXT("Category"), TEXT("SnapModule"));
				MetaData->SetValue(NewProp_ModuleInfo, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapModuleInfo.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ASnapModuleInfo(Z_Construct_UClass_ASnapModuleInfo, &ASnapModuleInfo::StaticClass, TEXT("ASnapModuleInfo"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ASnapModuleInfo);
	UClass* Z_Construct_UClass_USnapModule_NoRegister()
	{
		return USnapModule::StaticClass();
	}
	UClass* Z_Construct_UClass_USnapModule()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = USnapModule::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ModuleInfo = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ModuleInfo, USnapModule), 0x0010000000000000, Z_Construct_UScriptStruct_FSnapModuleMetaData());
				UProperty* NewProp_Bounds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Bounds"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Bounds, USnapModule), 0x0010000000000000, Z_Construct_UScriptStruct_FBox());
				UProperty* NewProp_SnapDoors = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SnapDoors"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(SnapDoors, USnapModule), 0x0010000000000000);
				UProperty* NewProp_SnapDoors_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SnapDoors, TEXT("SnapDoors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_ASnapDoor_NoRegister());
				UProperty* NewProp_IgnoredModuleActorType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IgnoredModuleActorType"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(IgnoredModuleActorType, USnapModule), 0x0010000000000000);
				UProperty* NewProp_IgnoredModuleActorType_Inner = new(EC_InternalUseOnlyConstructor, NewProp_IgnoredModuleActorType, TEXT("IgnoredModuleActorType"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UObject_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_ModuleActorIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleActorIds"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ModuleActorIds, USnapModule), 0x0010000000000000);
				UProperty* NewProp_ModuleActorIds_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ModuleActorIds, TEXT("ModuleActorIds"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_ModuleWorld = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleWorld"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ModuleWorld, USnapModule), 0x0010000000000000, Z_Construct_UClass_UWorld_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Snap/Module/SnapModule.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapModule.h"));
				MetaData->SetValue(NewProp_ModuleInfo, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapModule.h"));
				MetaData->SetValue(NewProp_Bounds, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapModule.h"));
				MetaData->SetValue(NewProp_SnapDoors, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapModule.h"));
				MetaData->SetValue(NewProp_IgnoredModuleActorType, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapModule.h"));
				MetaData->SetValue(NewProp_ModuleActorIds, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapModule.h"));
				MetaData->SetValue(NewProp_ModuleWorld, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapModule.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USnapModule(Z_Construct_UClass_USnapModule, &USnapModule::StaticClass, TEXT("USnapModule"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USnapModule);
	UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDungeonLayoutLink()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDungeonLayoutLink_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ESnapDungeonLayoutLink"), 0, Get_Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDungeonLayoutLink_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESnapDungeonLayoutLink"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESnapDungeonLayoutLink::MainBranch")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESnapDungeonLayoutLink::SideBranch")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESnapDungeonLayoutLink::ESnapDungeonLayoutLink_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ESnapDungeonLayoutLink");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("MainBranch.DisplayName"), TEXT("Main Branch"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Model/SnapDungeonLayoutNode.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SideBranch.DisplayName"), TEXT("Side Branch"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDungeonLayoutLink_CRC() { return 3051791150U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSnapDungeonLayoutLink()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FSnapDungeonLayoutLink_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SnapDungeonLayoutLink"), sizeof(FSnapDungeonLayoutLink), Get_Z_Construct_UScriptStruct_FSnapDungeonLayoutLink_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SnapDungeonLayoutLink"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSnapDungeonLayoutLink>, EStructFlags(0x00000201));
			UProperty* NewProp_LinkType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LinkType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(LinkType, FSnapDungeonLayoutLink), 0x0010000000000000, Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDungeonLayoutLink());
			UProperty* NewProp_DoorTransform = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DoorTransform"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(DoorTransform, FSnapDungeonLayoutLink), 0x0010000000000000, Z_Construct_UScriptStruct_FTransform());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Model/SnapDungeonLayoutNode.h"));
			MetaData->SetValue(NewProp_LinkType, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Model/SnapDungeonLayoutNode.h"));
			MetaData->SetValue(NewProp_DoorTransform, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Model/SnapDungeonLayoutNode.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSnapDungeonLayoutLink_CRC() { return 2436446644U; }
	UClass* Z_Construct_UClass_USnapDungeonLayoutNode_NoRegister()
	{
		return USnapDungeonLayoutNode::StaticClass();
	}
	UClass* Z_Construct_UClass_USnapDungeonLayoutNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = USnapDungeonLayoutNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_LinkedNodes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LinkedNodes"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(LinkedNodes, USnapDungeonLayoutNode), 0x0010000000000000);
				UProperty* NewProp_LinkedNodes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_LinkedNodes, TEXT("LinkedNodes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_USnapDungeonLayoutNode_NoRegister());
				UProperty* NewProp_Links = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Links"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Links, USnapDungeonLayoutNode), 0x0010000000000000);
				UProperty* NewProp_Links_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Links, TEXT("Links"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSnapDungeonLayoutLink());
				UProperty* NewProp_Bounds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Bounds"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Bounds, USnapDungeonLayoutNode), 0x0010000000000000, Z_Construct_UScriptStruct_FBox());
				UProperty* NewProp_ModuleTransform = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ModuleTransform"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ModuleTransform, USnapDungeonLayoutNode), 0x0010000000000000, Z_Construct_UScriptStruct_FTransform());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Snap/Model/SnapDungeonLayoutNode.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Model/SnapDungeonLayoutNode.h"));
				MetaData->SetValue(NewProp_LinkedNodes, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Model/SnapDungeonLayoutNode.h"));
				MetaData->SetValue(NewProp_Links, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Model/SnapDungeonLayoutNode.h"));
				MetaData->SetValue(NewProp_Bounds, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Model/SnapDungeonLayoutNode.h"));
				MetaData->SetValue(NewProp_ModuleTransform, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Model/SnapDungeonLayoutNode.h"));
				MetaData->SetValue(NewProp_ModuleTransform, TEXT("ToolTip"), TEXT("UPROPERTY()\nUSnapModule* Module;"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USnapDungeonLayoutNode(Z_Construct_UClass_USnapDungeonLayoutNode, &USnapDungeonLayoutNode::StaticClass, TEXT("USnapDungeonLayoutNode"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USnapDungeonLayoutNode);
	UClass* Z_Construct_UClass_USnapDungeonModel_NoRegister()
	{
		return USnapDungeonModel::StaticClass();
	}
	UClass* Z_Construct_UClass_USnapDungeonModel()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonModel();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = USnapDungeonModel::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_LayoutRootNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LayoutRootNode"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(LayoutRootNode, USnapDungeonModel), 0x0010000000000000, Z_Construct_UClass_USnapDungeonLayoutNode_NoRegister());
				UProperty* NewProp_BranchEndSnapModules = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BranchEndSnapModules"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(BranchEndSnapModules, USnapDungeonModel), 0x0010000000000000);
				UProperty* NewProp_BranchEndSnapModules_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BranchEndSnapModules, TEXT("BranchEndSnapModules"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_USnapModule_NoRegister());
				UProperty* NewProp_EndSnapModules = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EndSnapModules"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(EndSnapModules, USnapDungeonModel), 0x0010000000000000);
				UProperty* NewProp_EndSnapModules_Inner = new(EC_InternalUseOnlyConstructor, NewProp_EndSnapModules, TEXT("EndSnapModules"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_USnapModule_NoRegister());
				UProperty* NewProp_StartSnapModules = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StartSnapModules"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(StartSnapModules, USnapDungeonModel), 0x0010000000000000);
				UProperty* NewProp_StartSnapModules_Inner = new(EC_InternalUseOnlyConstructor, NewProp_StartSnapModules, TEXT("StartSnapModules"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_USnapModule_NoRegister());
				UProperty* NewProp_SnapModules = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SnapModules"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(SnapModules, USnapDungeonModel), 0x0010000000000000);
				UProperty* NewProp_SnapModules_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SnapModules, TEXT("SnapModules"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_USnapModule_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Snap/SnapDungeonModel.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonModel.h"));
				MetaData->SetValue(NewProp_LayoutRootNode, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonModel.h"));
				MetaData->SetValue(NewProp_BranchEndSnapModules, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonModel.h"));
				MetaData->SetValue(NewProp_EndSnapModules, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonModel.h"));
				MetaData->SetValue(NewProp_StartSnapModules, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonModel.h"));
				MetaData->SetValue(NewProp_SnapModules, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonModel.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USnapDungeonModel(Z_Construct_UClass_USnapDungeonModel, &USnapDungeonModel::StaticClass, TEXT("USnapDungeonModel"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USnapDungeonModel);
	UClass* Z_Construct_UClass_USnapDungeonBuilder_NoRegister()
	{
		return USnapDungeonBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_USnapDungeonBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonBuilder();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = USnapDungeonBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Snap/SnapDungeonBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonBuilder.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USnapDungeonBuilder(Z_Construct_UClass_USnapDungeonBuilder, &USnapDungeonBuilder::StaticClass, TEXT("USnapDungeonBuilder"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USnapDungeonBuilder);
	UClass* Z_Construct_UClass_UFloorPlanConfig_NoRegister()
	{
		return UFloorPlanConfig::StaticClass();
	}
	UClass* Z_Construct_UClass_UFloorPlanConfig()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonConfig();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UFloorPlanConfig::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RoomSplitProbabilityOffset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RoomSplitProbabilityOffset"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(RoomSplitProbabilityOffset, UFloorPlanConfig), 0x0010000000000005);
				UProperty* NewProp_MinRoomChunkArea = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MinRoomChunkArea"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MinRoomChunkArea, UFloorPlanConfig), 0x0010000000000005);
				UProperty* NewProp_HallWidth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HallWidth"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(HallWidth, UFloorPlanConfig), 0x0010000000000005);
				UProperty* NewProp_MaxRoomSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxRoomSize"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxRoomSize, UFloorPlanConfig), 0x0010000000000005);
				UProperty* NewProp_MinRoomSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MinRoomSize"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MinRoomSize, UFloorPlanConfig), 0x0010000000000005);
				UProperty* NewProp_GridSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GridSize"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GridSize, UFloorPlanConfig), 0x0010000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_BuildingSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BuildingSize"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(BuildingSize, UFloorPlanConfig), 0x0010000000000005, Z_Construct_UScriptStruct_FVector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/FloorPlan/FloorPlanConfig.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanConfig.h"));
				MetaData->SetValue(NewProp_RoomSplitProbabilityOffset, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_RoomSplitProbabilityOffset, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanConfig.h"));
				MetaData->SetValue(NewProp_MinRoomChunkArea, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_MinRoomChunkArea, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanConfig.h"));
				MetaData->SetValue(NewProp_HallWidth, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_HallWidth, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanConfig.h"));
				MetaData->SetValue(NewProp_MaxRoomSize, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_MaxRoomSize, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanConfig.h"));
				MetaData->SetValue(NewProp_MinRoomSize, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_MinRoomSize, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanConfig.h"));
				MetaData->SetValue(NewProp_GridSize, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_GridSize, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanConfig.h"));
				MetaData->SetValue(NewProp_BuildingSize, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_BuildingSize, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanConfig.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFloorPlanConfig(Z_Construct_UClass_UFloorPlanConfig, &UFloorPlanConfig::StaticClass, TEXT("UFloorPlanConfig"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFloorPlanConfig);
	UClass* Z_Construct_UClass_UGridDungeonConfig_NoRegister()
	{
		return UGridDungeonConfig::StaticClass();
	}
	UClass* Z_Construct_UClass_UGridDungeonConfig()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonConfig();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UGridDungeonConfig::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_InitialRoomRadius = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InitialRoomRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(InitialRoomRadius, UGridDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_FloorHeight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FloorHeight"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(FloorHeight, UGridDungeonConfig), 0x0010000000000000);
				UProperty* NewProp_LaneWidth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LaneWidth"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(LaneWidth, UGridDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_MaxAllowedStairHeight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxAllowedStairHeight"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxAllowedStairHeight, UGridDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_NormalStd = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NormalStd"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NormalStd, UGridDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_NormalMean = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NormalMean"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NormalMean, UGridDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_HeightVariationProbability = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HeightVariationProbability"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(HeightVariationProbability, UGridDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_DoorProximitySteps = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DoorProximitySteps"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DoorProximitySteps, UGridDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_StairConnectionTollerance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StairConnectionTollerance"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StairConnectionTollerance, UGridDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_SpanningTreeLoopProbability = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpanningTreeLoopProbability"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SpanningTreeLoopProbability, UGridDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_RoomAspectDelta = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RoomAspectDelta"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(RoomAspectDelta, UGridDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_RoomAreaThreshold = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RoomAreaThreshold"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RoomAreaThreshold, UGridDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_MaxCellSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxCellSize"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxCellSize, UGridDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_MinCellSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MinCellSize"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MinCellSize, UGridDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_GridCellSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GridCellSize"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GridCellSize, UGridDungeonConfig), 0x0010000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_NumCells = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NumCells"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NumCells, UGridDungeonConfig), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_InitialRoomRadius, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_InitialRoomRadius, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_InitialRoomRadius, TEXT("ToolTip"), TEXT("[Advanced]  Keep between 10-15"));
				MetaData->SetValue(NewProp_FloorHeight, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_FloorHeight, TEXT("ToolTip"), TEXT("[Advanced] Ignored //(EditAnywhere, BlueprintReadWrite, Category = Dungeon)"));
				MetaData->SetValue(NewProp_LaneWidth, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_LaneWidth, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_LaneWidth, TEXT("ToolTip"), TEXT("The width of the lane connecting the rooms.   When rooms are to be connected, a \"lane\" is created to connect them together.\nAny cell colliding with this lane is converted to a corridor.  Else, it is converted to a cell of type \"corridor padding\""));
				MetaData->SetValue(NewProp_MaxAllowedStairHeight, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_MaxAllowedStairHeight, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_MaxAllowedStairHeight, TEXT("ToolTip"), TEXT("The number of logical floor units the dungeon height can vary. This determines how high the dungeon?s height\ncan vary (e.g. max 2 floors high).   Set this value depending on the stair meshes you designer has created.\nFor e.g.,  if there are two stair meshes, one 200 units high (1 floor) and another 400 units high (2 floors), this value should be set to 2\nIf you do not want any stairs / height variations, set this value to 0"));
				MetaData->SetValue(NewProp_NormalStd, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_NormalStd, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_NormalStd, TEXT("ToolTip"), TEXT("The random number generator used in the dungeon generator does not use a uniform distribution.\nInstead it uses a normal distribution to get higher frequency of lower values and fewer higher values\n(and hence fewer room cells and a lot more corridor cells).\nPlay with these parameters for different results"));
				MetaData->SetValue(NewProp_NormalMean, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_NormalMean, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_NormalMean, TEXT("ToolTip"), TEXT("The random number generator used in the dungeon generator does not use a uniform distribution.\nInstead it uses a normal distribution to get higher frequency of lower values and fewer higher values\n(and hence fewer room cells and a lot more corridor cells).\nPlay with these parameters for different results"));
				MetaData->SetValue(NewProp_HeightVariationProbability, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_HeightVariationProbability, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_HeightVariationProbability, TEXT("ToolTip"), TEXT("weak this value to increase / reduce the height variations (and stairs) in your dungeon.\nA value close to 0 reduces the height variation and increases as you approach 1.\nIncreasing this value to a higher level might create dungeons with no place for\nproper stair placement since there is too much height variation.\nA value of 0.2 to 0.4 seems good"));
				MetaData->SetValue(NewProp_DoorProximitySteps, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_DoorProximitySteps, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_DoorProximitySteps, TEXT("ToolTip"), TEXT("Increase this value to remove nearby duplicate doors.  This value determines how many cell we\ncan move to reach the two connected cells of a door if the door was removed"));
				MetaData->SetValue(NewProp_StairConnectionTollerance, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_StairConnectionTollerance, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_StairConnectionTollerance, TEXT("ToolTip"), TEXT("The generator would add stairs to make different areas of the dungeon accessible.\nHowever, we do not want too many stairs. For e.g., before adding a stair in a\nparticular elevated area, the generator would check if this area is already\naccessible from a nearby stair. If so, it would not add it.\nThis tolerance parameter determines how far to look for an existing path\nbefore we can add a stair.   Play with this parameter if you see too\nmany stairs close to each other, or too few"));
				MetaData->SetValue(NewProp_SpanningTreeLoopProbability, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_SpanningTreeLoopProbability, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_SpanningTreeLoopProbability, TEXT("ToolTip"), TEXT("Determines how many loops you would like to have in your dungeon.\nA value near 0 will create fewer loops creating linear dungeons.\nA value near 1 would create lots of loops, which would look unoriginal.\nIt's good to allow a few loops so a value close to zero (~0.2 should be good)"));
				MetaData->SetValue(NewProp_RoomAspectDelta, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_RoomAspectDelta, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_RoomAspectDelta, TEXT("ToolTip"), TEXT("The aspect ratio of the cells (width to height ratio).\nKeeping this value near 0 would create square rooms.\nBringing this close to 1 would create elongated / stretched rooms\nwith a high width to height ratio"));
				MetaData->SetValue(NewProp_RoomAreaThreshold, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_RoomAreaThreshold, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_RoomAreaThreshold, TEXT("ToolTip"), TEXT("If a cell area exceeds past this limit, it is converted into a room.\nAfter cells are promoted to rooms, all rooms are connected to each\nother through corridors (either directly or indirectly. See spanning tree later)\nThis field determines how \"dense\" your dungeon gets.\nReduce this number to get a densely populated dungeon with lots of rooms"));
				MetaData->SetValue(NewProp_MaxCellSize, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_MaxCellSize, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_MaxCellSize, TEXT("ToolTip"), TEXT("Maximum size of a generated cell. While generation, a cell is\neither converted to a room, corridor or is discarded completely.\nThe Cell width / height is randomly chosen within this range"));
				MetaData->SetValue(NewProp_MinCellSize, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_MinCellSize, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_MinCellSize, TEXT("ToolTip"), TEXT("Minimum size of a generated cell. While generation, a cell is\neither converted to a room, corridor or is discarded completely.\nThe Cell width / height is randomly chosen within this range"));
				MetaData->SetValue(NewProp_GridCellSize, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_GridCellSize, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_GridCellSize, TEXT("ToolTip"), TEXT("This size is determined by the art asset used in the dungeon theme designed by the artist.\nFor e.g., if we have a floor mesh that is 400x400.  The height of a floor is chosen to be 200 units as the stair mesh is 200 units high,\nthen the value should be set to 400x400x200.   You should change this to the dimension of the modular asset your designer has created for the dungeon"));
				MetaData->SetValue(NewProp_NumCells, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_NumCells, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonConfig.h"));
				MetaData->SetValue(NewProp_NumCells, TEXT("ToolTip"), TEXT("The number of cells to use while building the dungeon.\nA larger number would create a bigger and more complex dungeon.\nA number of 100-150 builds a medium to large sized dungeon.\nExperiment with different ranges. You will not see these cells in the final result."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGridDungeonConfig(Z_Construct_UClass_UGridDungeonConfig, &UGridDungeonConfig::StaticClass, TEXT("UGridDungeonConfig"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGridDungeonConfig);
	UClass* Z_Construct_UClass_UIsaacRoomLayoutBuilder_NoRegister()
	{
		return UIsaacRoomLayoutBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_UIsaacRoomLayoutBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UIsaacRoomLayoutBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24301081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Isaac/RoomLayouts/IsaacRoomLayoutBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/RoomLayouts/IsaacRoomLayoutBuilder.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UIsaacRoomLayoutBuilder(Z_Construct_UClass_UIsaacRoomLayoutBuilder, &UIsaacRoomLayoutBuilder::StaticClass, TEXT("UIsaacRoomLayoutBuilder"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UIsaacRoomLayoutBuilder);
	UClass* Z_Construct_UClass_UIsaacDungeonConfig_NoRegister()
	{
		return UIsaacDungeonConfig::StaticClass();
	}
	UClass* Z_Construct_UClass_UIsaacDungeonConfig()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonConfig();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UIsaacDungeonConfig::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RoomLayoutBuilder = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RoomLayoutBuilder"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(RoomLayoutBuilder, UIsaacDungeonConfig), 0x001202000008000d, Z_Construct_UClass_UIsaacRoomLayoutBuilder_NoRegister());
				UProperty* NewProp_CycleProbability = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CycleProbability"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CycleProbability, UIsaacDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_SpawnRoomBranchProbability = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpawnRoomBranchProbability"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SpawnRoomBranchProbability, UIsaacDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_GrowSidewaysProbability = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GrowSidewaysProbability"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(GrowSidewaysProbability, UIsaacDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_GrowForwardProbability = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GrowForwardProbability"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(GrowForwardProbability, UIsaacDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_RoomPadding = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RoomPadding"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RoomPadding, UIsaacDungeonConfig), 0x0010000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_TileSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TileSize"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TileSize, UIsaacDungeonConfig), 0x0010000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_RoomLength = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RoomLength"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RoomLength, UIsaacDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_RoomWidth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RoomWidth"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RoomWidth, UIsaacDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_MaxRooms = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxRooms"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxRooms, UIsaacDungeonConfig), 0x0010000000000005);
				UProperty* NewProp_MinRooms = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MinRooms"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MinRooms, UIsaacDungeonConfig), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Isaac/IsaacDungeonConfig.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonConfig.h"));
				MetaData->SetValue(NewProp_RoomLayoutBuilder, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_RoomLayoutBuilder, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_RoomLayoutBuilder, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonConfig.h"));
				MetaData->SetValue(NewProp_CycleProbability, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_CycleProbability, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonConfig.h"));
				MetaData->SetValue(NewProp_CycleProbability, TEXT("ToolTip"), TEXT("Probability of moving forward in the room"));
				MetaData->SetValue(NewProp_SpawnRoomBranchProbability, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_SpawnRoomBranchProbability, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonConfig.h"));
				MetaData->SetValue(NewProp_SpawnRoomBranchProbability, TEXT("ToolTip"), TEXT("Probability of moving forward in the room"));
				MetaData->SetValue(NewProp_GrowSidewaysProbability, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_GrowSidewaysProbability, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonConfig.h"));
				MetaData->SetValue(NewProp_GrowSidewaysProbability, TEXT("ToolTip"), TEXT("Probability of moving forward in the room"));
				MetaData->SetValue(NewProp_GrowForwardProbability, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_GrowForwardProbability, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonConfig.h"));
				MetaData->SetValue(NewProp_GrowForwardProbability, TEXT("ToolTip"), TEXT("Probability of moving forward in the room"));
				MetaData->SetValue(NewProp_RoomPadding, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_RoomPadding, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonConfig.h"));
				MetaData->SetValue(NewProp_TileSize, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_TileSize, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonConfig.h"));
				MetaData->SetValue(NewProp_RoomLength, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_RoomLength, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonConfig.h"));
				MetaData->SetValue(NewProp_RoomWidth, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_RoomWidth, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonConfig.h"));
				MetaData->SetValue(NewProp_RoomWidth, TEXT("ToolTip"), TEXT("The size of the room"));
				MetaData->SetValue(NewProp_MaxRooms, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_MaxRooms, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonConfig.h"));
				MetaData->SetValue(NewProp_MaxRooms, TEXT("ToolTip"), TEXT("Max no. of rooms to create in the map"));
				MetaData->SetValue(NewProp_MinRooms, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_MinRooms, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonConfig.h"));
				MetaData->SetValue(NewProp_MinRooms, TEXT("ToolTip"), TEXT("Min no. of rooms to create in the map"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UIsaacDungeonConfig(Z_Construct_UClass_UIsaacDungeonConfig, &UIsaacDungeonConfig::StaticClass, TEXT("UIsaacDungeonConfig"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UIsaacDungeonConfig);
	UClass* Z_Construct_UClass_USnapDungeonConfig_NoRegister()
	{
		return USnapDungeonConfig::StaticClass();
	}
	UClass* Z_Construct_UClass_USnapDungeonConfig()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonConfig();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = USnapDungeonConfig::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SafetyMaxModuleLimit = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SafetyMaxModuleLimit"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SafetyMaxModuleLimit, USnapDungeonConfig), 0x0010000000000001);
				UProperty* NewProp_MaxProcessingPower = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxProcessingPower"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxProcessingPower, USnapDungeonConfig), 0x0010000000000001);
				UProperty* NewProp_CollisionTestContraction = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CollisionTestContraction"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(CollisionTestContraction, USnapDungeonConfig), 0x0010000000000001);
				UProperty* NewProp_SideBranchProbability = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SideBranchProbability"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SideBranchProbability, USnapDungeonConfig), 0x0010000000000001);
				UProperty* NewProp_SideBranchSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SideBranchSize"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SideBranchSize, USnapDungeonConfig), 0x0010000000000001);
				UProperty* NewProp_MainBranchSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MainBranchSize"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MainBranchSize, USnapDungeonConfig), 0x0010000000000001);
				UProperty* NewProp_IgnoredModuleActorType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IgnoredModuleActorType"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(IgnoredModuleActorType, USnapDungeonConfig), 0x0010000000000001);
				UProperty* NewProp_IgnoredModuleActorType_Inner = new(EC_InternalUseOnlyConstructor, NewProp_IgnoredModuleActorType, TEXT("IgnoredModuleActorType"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UObject_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_BranchEndModules = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BranchEndModules"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(BranchEndModules, USnapDungeonConfig), 0x0014000000000001);
				UProperty* NewProp_BranchEndModules_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BranchEndModules, TEXT("BranchEndModules"), RF_Public|RF_Transient|RF_MarkAsNative) UAssetObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_UWorld_NoRegister());
				UProperty* NewProp_EndModules = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EndModules"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(EndModules, USnapDungeonConfig), 0x0014000000000001);
				UProperty* NewProp_EndModules_Inner = new(EC_InternalUseOnlyConstructor, NewProp_EndModules, TEXT("EndModules"), RF_Public|RF_Transient|RF_MarkAsNative) UAssetObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_UWorld_NoRegister());
				UProperty* NewProp_StartModules = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StartModules"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(StartModules, USnapDungeonConfig), 0x0014000000000001);
				UProperty* NewProp_StartModules_Inner = new(EC_InternalUseOnlyConstructor, NewProp_StartModules, TEXT("StartModules"), RF_Public|RF_Transient|RF_MarkAsNative) UAssetObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_UWorld_NoRegister());
				UProperty* NewProp_Modules = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Modules"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Modules, USnapDungeonConfig), 0x0014000000000001);
				UProperty* NewProp_Modules_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Modules, TEXT("Modules"), RF_Public|RF_Transient|RF_MarkAsNative) UAssetObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_UWorld_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Snap/SnapDungeonConfig.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonConfig.h"));
				MetaData->SetValue(NewProp_SafetyMaxModuleLimit, TEXT("Category"), TEXT("Advanced"));
				MetaData->SetValue(NewProp_SafetyMaxModuleLimit, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonConfig.h"));
				MetaData->SetValue(NewProp_SafetyMaxModuleLimit, TEXT("ToolTip"), TEXT("A hard limit on the max modules that can ever be created on this dungeon.  This value makes sure there are not too many modules\ncreated due to a improper configuration (e.g. if all the modules were set to ignore the module count in the snap module info,\nit would create infinite modules"));
				MetaData->SetValue(NewProp_MaxProcessingPower, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_MaxProcessingPower, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonConfig.h"));
				MetaData->SetValue(NewProp_MaxProcessingPower, TEXT("ToolTip"), TEXT("Sometimes, the search space is too large (with billions of possibilities) and if a valid path cannot be easily found\n(e.g. due to existing occluded geometry) the search would take too long.  This value makes sure the build doesn't\nhang and bails out early with the best result it has found till that point.\nIncrease the value to have better quality result in those cases. Decrease if you notice the build taking too long\nor if build speed is a priority (e.g. if you are building during runtime).   A good value is ~1000000"));
				MetaData->SetValue(NewProp_CollisionTestContraction, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_CollisionTestContraction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonConfig.h"));
				MetaData->SetValue(NewProp_CollisionTestContraction, TEXT("ToolTip"), TEXT("When modules are stitched together, the builder makes sure they do not overlap.  This parameter is used to\ncontrol the tolerance level.  If set to 0, even the slightest overlap with a nearby module would not create an adjacent module\nLeaving to a small number like 100, would tolerate an overlap with nearby module by 100 unreal units.\nAdjust this depending on your art asset"));
				MetaData->SetValue(NewProp_SideBranchProbability, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_SideBranchProbability, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonConfig.h"));
				MetaData->SetValue(NewProp_SideBranchSize, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_SideBranchSize, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonConfig.h"));
				MetaData->SetValue(NewProp_MainBranchSize, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_MainBranchSize, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonConfig.h"));
				MetaData->SetValue(NewProp_MainBranchSize, TEXT("ToolTip"), TEXT("Controls how deep the modules should go from the start point.  Once reached, it would stop growing\nand branch out from earlier points"));
				MetaData->SetValue(NewProp_IgnoredModuleActorType, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_IgnoredModuleActorType, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonConfig.h"));
				MetaData->SetValue(NewProp_IgnoredModuleActorType, TEXT("ToolTip"), TEXT("The specified module levels will have actors which you would not like to spawn in the main dungeon level\n(e.g. skybox, directional light etc). Specify any extra actor types you do not wish to spawn"));
				MetaData->SetValue(NewProp_BranchEndModules, TEXT("AllowedClasses"), TEXT("World"));
				MetaData->SetValue(NewProp_BranchEndModules, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_BranchEndModules, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonConfig.h"));
				MetaData->SetValue(NewProp_BranchEndModules, TEXT("ToolTip"), TEXT("A optional end module of a branch coming out of the main path.  Leave it blank to pick a random module from the Modules list"));
				MetaData->SetValue(NewProp_EndModules, TEXT("AllowedClasses"), TEXT("World"));
				MetaData->SetValue(NewProp_EndModules, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_EndModules, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonConfig.h"));
				MetaData->SetValue(NewProp_EndModules, TEXT("ToolTip"), TEXT("A optional end module. If specified, this module would be last room.  Leave it blank to pick a random module from the Modules list"));
				MetaData->SetValue(NewProp_StartModules, TEXT("AllowedClasses"), TEXT("World"));
				MetaData->SetValue(NewProp_StartModules, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_StartModules, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonConfig.h"));
				MetaData->SetValue(NewProp_StartModules, TEXT("ToolTip"), TEXT("A optional starting module. If specified, this module would be first spawned.  Leave it blank to pick a random module from the Modules list"));
				MetaData->SetValue(NewProp_Modules, TEXT("AllowedClasses"), TEXT("World"));
				MetaData->SetValue(NewProp_Modules, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_Modules, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonConfig.h"));
				MetaData->SetValue(NewProp_Modules, TEXT("ToolTip"), TEXT("Specify the list of modules here.  These modules would be stitched together to create your level"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USnapDungeonConfig(Z_Construct_UClass_USnapDungeonConfig, &USnapDungeonConfig::StaticClass, TEXT("USnapDungeonConfig"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USnapDungeonConfig);
	UClass* Z_Construct_UClass_ADungeonDebug_NoRegister()
	{
		return ADungeonDebug::StaticClass();
	}
	UClass* Z_Construct_UClass_ADungeonDebug()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = ADungeonDebug::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CloneTemplate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CloneTemplate"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CloneTemplate, ADungeonDebug), 0x0010000000000005, Z_Construct_UClass_AActor_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Rendering Input Actor Misc"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Utils/Debug/DungeonDebug.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("false"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/Debug/DungeonDebug.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_CloneTemplate, TEXT("Category"), TEXT("Debug"));
				MetaData->SetValue(NewProp_CloneTemplate, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/Debug/DungeonDebug.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ADungeonDebug(Z_Construct_UClass_ADungeonDebug, &ADungeonDebug::StaticClass, TEXT("ADungeonDebug"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ADungeonDebug);
	UFunction* Z_Construct_UFunction_UDungeonEventListener_OnDungeonDestroyed()
	{
		UObject* Outer=Z_Construct_UClass_UDungeonEventListener();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnDungeonDestroyed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535, sizeof(DungeonEventListener_eventOnDungeonDestroyed_Parms));
			UProperty* NewProp_Dungeon = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Dungeon"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Dungeon, DungeonEventListener_eventOnDungeonDestroyed_Parms), 0x0010000000000080, Z_Construct_UClass_ADungeon_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonEventListener.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called after the dungeon has been destroyed"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDungeonEventListener_OnDungeonLayoutBuilt()
	{
		UObject* Outer=Z_Construct_UClass_UDungeonEventListener();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnDungeonLayoutBuilt"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535, sizeof(DungeonEventListener_eventOnDungeonLayoutBuilt_Parms));
			UProperty* NewProp_Dungeon = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Dungeon"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Dungeon, DungeonEventListener_eventOnDungeonLayoutBuilt_Parms), 0x0010000000000080, Z_Construct_UClass_ADungeon_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonEventListener.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called after the layout is generated in memory"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDungeonEventListener_OnMarkersEmitted()
	{
		UObject* Outer=Z_Construct_UClass_UDungeonEventListener();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnMarkersEmitted"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535, sizeof(DungeonEventListener_eventOnMarkersEmitted_Parms));
			UProperty* NewProp_Dungeon = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Dungeon"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Dungeon, DungeonEventListener_eventOnMarkersEmitted_Parms), 0x0010000000000080, Z_Construct_UClass_ADungeon_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonEventListener.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called after all the markers are emitted into the scene"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDungeonEventListener_OnPostDungeonBuild()
	{
		UObject* Outer=Z_Construct_UClass_UDungeonEventListener();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPostDungeonBuild"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535, sizeof(DungeonEventListener_eventOnPostDungeonBuild_Parms));
			UProperty* NewProp_Dungeon = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Dungeon"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Dungeon, DungeonEventListener_eventOnPostDungeonBuild_Parms), 0x0010000000000080, Z_Construct_UClass_ADungeon_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonEventListener.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called after the dungeon is completely built"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDungeonEventListener_OnPreDungeonBuild()
	{
		UObject* Outer=Z_Construct_UClass_UDungeonEventListener();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPreDungeonBuild"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535, sizeof(DungeonEventListener_eventOnPreDungeonBuild_Parms));
			UProperty* NewProp_Dungeon = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Dungeon"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Dungeon, DungeonEventListener_eventOnPreDungeonBuild_Parms), 0x0010000000000080, Z_Construct_UClass_ADungeon_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonEventListener.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called before the dungeon is built"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDungeonEventListener_OnPreDungeonDestroy()
	{
		UObject* Outer=Z_Construct_UClass_UDungeonEventListener();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPreDungeonDestroy"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535, sizeof(DungeonEventListener_eventOnPreDungeonDestroy_Parms));
			UProperty* NewProp_Dungeon = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Dungeon"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Dungeon, DungeonEventListener_eventOnPreDungeonDestroy_Parms), 0x0010000000000080, Z_Construct_UClass_ADungeon_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonEventListener.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called before the dungeon is about to be destroyed"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UDungeonEventListener_NoRegister()
	{
		return UDungeonEventListener::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonEventListener()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonEventListener::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24301081;

				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonEventListener_OnDungeonDestroyed());
				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonEventListener_OnDungeonLayoutBuilt());
				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonEventListener_OnMarkersEmitted());
				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonEventListener_OnPostDungeonBuild());
				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonEventListener_OnPreDungeonBuild());
				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonEventListener_OnPreDungeonDestroy());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonEventListener_OnDungeonDestroyed(), "OnDungeonDestroyed"); // 655648201
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonEventListener_OnDungeonLayoutBuilt(), "OnDungeonLayoutBuilt"); // 1953919286
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonEventListener_OnMarkersEmitted(), "OnMarkersEmitted"); // 1845902446
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonEventListener_OnPostDungeonBuild(), "OnPostDungeonBuild"); // 1134623317
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonEventListener_OnPreDungeonBuild(), "OnPreDungeonBuild"); // 2096603946
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonEventListener_OnPreDungeonDestroy(), "OnPreDungeonDestroy"); // 2419206405
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/DungeonEventListener.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonEventListener.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implement this class in blueprint (or C++) to emit your own custom markers in the scene"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonEventListener(Z_Construct_UClass_UDungeonEventListener, &UDungeonEventListener::StaticClass, TEXT("UDungeonEventListener"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonEventListener);
	UClass* Z_Construct_UClass_ADungeonInstancedMeshActor_NoRegister()
	{
		return ADungeonInstancedMeshActor::StaticClass();
	}
	UClass* Z_Construct_UClass_ADungeonInstancedMeshActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = ADungeonInstancedMeshActor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Actors/DungeonInstancedMeshActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Actors/DungeonInstancedMeshActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ADungeonInstancedMeshActor(Z_Construct_UClass_ADungeonInstancedMeshActor, &ADungeonInstancedMeshActor::StaticClass, TEXT("ADungeonInstancedMeshActor"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ADungeonInstancedMeshActor);
	UScriptStruct* Z_Construct_UScriptStruct_FMaterialOverride()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FMaterialOverride_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MaterialOverride"), sizeof(FMaterialOverride), Get_Z_Construct_UScriptStruct_FMaterialOverride_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MaterialOverride"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMaterialOverride>, EStructFlags(0x00000201));
			UProperty* NewProp_Material = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Material"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Material, FMaterialOverride), 0x0010000000000005, Z_Construct_UClass_UMaterialInterface_NoRegister());
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, FMaterialOverride), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Core/Actors/DungeonMesh.h"));
			MetaData->SetValue(NewProp_Material, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_Material, TEXT("ModuleRelativePath"), TEXT("Public/Core/Actors/DungeonMesh.h"));
			MetaData->SetValue(NewProp_index, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(NewProp_index, TEXT("ModuleRelativePath"), TEXT("Public/Core/Actors/DungeonMesh.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMaterialOverride_CRC() { return 2206613581U; }
	UClass* Z_Construct_UClass_UDungeonMesh_NoRegister()
	{
		return UDungeonMesh::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonMesh()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonMesh::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Template = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Template"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Template, UDungeonMesh), 0x0010000000080008, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_HashCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HashCode"), RF_Public|RF_Transient|RF_MarkAsNative) UUInt32Property(CPP_PROPERTY_BASE(HashCode, UDungeonMesh), 0x0010000000000000);
				UProperty* NewProp_MaterialOverrides = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaterialOverrides"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MaterialOverrides, UDungeonMesh), 0x0010000000000000);
				UProperty* NewProp_MaterialOverrides_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MaterialOverrides, TEXT("MaterialOverrides"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMaterialOverride());
				UProperty* NewProp_StaticMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaticMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(StaticMesh, UDungeonMesh), 0x0010000000000000, Z_Construct_UClass_UStaticMesh_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Actors/DungeonMesh.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Actors/DungeonMesh.h"));
				MetaData->SetValue(NewProp_Template, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_Template, TEXT("ModuleRelativePath"), TEXT("Public/Core/Actors/DungeonMesh.h"));
				MetaData->SetValue(NewProp_HashCode, TEXT("ModuleRelativePath"), TEXT("Public/Core/Actors/DungeonMesh.h"));
				MetaData->SetValue(NewProp_MaterialOverrides, TEXT("ModuleRelativePath"), TEXT("Public/Core/Actors/DungeonMesh.h"));
				MetaData->SetValue(NewProp_StaticMesh, TEXT("ModuleRelativePath"), TEXT("Public/Core/Actors/DungeonMesh.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonMesh(Z_Construct_UClass_UDungeonMesh, &UDungeonMesh::StaticClass, TEXT("UDungeonMesh"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonMesh);
	UFunction* Z_Construct_UFunction_UDungeonModelHelper_ExpandBounds()
	{
		struct DungeonModelHelper_eventExpandBounds_Parms
		{
			FRectangle Bounds;
			int32 Size;
			FRectangle Result;
		};
		UObject* Outer=Z_Construct_UClass_UDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ExpandBounds"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(DungeonModelHelper_eventExpandBounds_Parms));
			UProperty* NewProp_Result = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Result"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Result, DungeonModelHelper_eventExpandBounds_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FRectangle());
			UProperty* NewProp_Size = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Size"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Size, DungeonModelHelper_eventExpandBounds_Parms), 0x0010000000000080);
			UProperty* NewProp_Bounds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Bounds"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Bounds, DungeonModelHelper_eventExpandBounds_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FRectangle());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/DungeonModelHelper.h"));
			MetaData->SetValue(NewProp_Bounds, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDungeonModelHelper_GetCenterExtent()
	{
		struct DungeonModelHelper_eventGetCenterExtent_Parms
		{
			FRectangle Rectangle;
			FVector Center;
			FVector Extent;
		};
		UObject* Outer=Z_Construct_UClass_UDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetCenterExtent"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(DungeonModelHelper_eventGetCenterExtent_Parms));
			UProperty* NewProp_Extent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Extent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Extent, DungeonModelHelper_eventGetCenterExtent_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Center = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Center"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Center, DungeonModelHelper_eventGetCenterExtent_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Rectangle = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rectangle"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rectangle, DungeonModelHelper_eventGetCenterExtent_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FRectangle());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/DungeonModelHelper.h"));
			MetaData->SetValue(NewProp_Rectangle, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDungeonModelHelper_GetRectAreaPoints()
	{
		struct FIntVector
		{
			int32 X;
			int32 Y;
			int32 Z;
		};

		struct DungeonModelHelper_eventGetRectAreaPoints_Parms
		{
			FRectangle Rectangle;
			TArray<FIntVector> BorderPoints;
		};
		UObject* Outer=Z_Construct_UClass_UDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetRectAreaPoints"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(DungeonModelHelper_eventGetRectAreaPoints_Parms));
			UProperty* NewProp_BorderPoints = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BorderPoints"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(BorderPoints, DungeonModelHelper_eventGetRectAreaPoints_Parms), 0x0010000000000180);
			UProperty* NewProp_BorderPoints_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BorderPoints, TEXT("BorderPoints"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FIntVector());
			UProperty* NewProp_Rectangle = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rectangle"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rectangle, DungeonModelHelper_eventGetRectAreaPoints_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FRectangle());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/DungeonModelHelper.h"));
			MetaData->SetValue(NewProp_Rectangle, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDungeonModelHelper_GetRectBorderPoints()
	{
		struct FIntVector
		{
			int32 X;
			int32 Y;
			int32 Z;
		};

		struct DungeonModelHelper_eventGetRectBorderPoints_Parms
		{
			FRectangle Rectangle;
			TArray<FIntVector> BorderPoints;
		};
		UObject* Outer=Z_Construct_UClass_UDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetRectBorderPoints"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(DungeonModelHelper_eventGetRectBorderPoints_Parms));
			UProperty* NewProp_BorderPoints = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BorderPoints"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(BorderPoints, DungeonModelHelper_eventGetRectBorderPoints_Parms), 0x0010000000000180);
			UProperty* NewProp_BorderPoints_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BorderPoints, TEXT("BorderPoints"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FIntVector());
			UProperty* NewProp_Rectangle = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rectangle"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rectangle, DungeonModelHelper_eventGetRectBorderPoints_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FRectangle());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/DungeonModelHelper.h"));
			MetaData->SetValue(NewProp_Rectangle, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDungeonModelHelper_MakeIntVector()
	{
		struct FIntVector
		{
			int32 X;
			int32 Y;
			int32 Z;
		};

		struct DungeonModelHelper_eventMakeIntVector_Parms
		{
			FVector In;
			FIntVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MakeIntVector"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(DungeonModelHelper_eventMakeIntVector_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, DungeonModelHelper_eventMakeIntVector_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FIntVector());
			UProperty* NewProp_In = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("In"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(In, DungeonModelHelper_eventMakeIntVector_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/DungeonModelHelper.h"));
			MetaData->SetValue(NewProp_In, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDungeonModelHelper_MakeVector()
	{
		struct FIntVector
		{
			int32 X;
			int32 Y;
			int32 Z;
		};

		struct DungeonModelHelper_eventMakeVector_Parms
		{
			FIntVector In;
			float scale;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MakeVector"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(DungeonModelHelper_eventMakeVector_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, DungeonModelHelper_eventMakeVector_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_scale = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("scale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(scale, DungeonModelHelper_eventMakeVector_Parms), 0x0010000000000080);
			UProperty* NewProp_In = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("In"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(In, DungeonModelHelper_eventMakeVector_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FIntVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_scale"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/DungeonModelHelper.h"));
			MetaData->SetValue(NewProp_In, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UDungeonModelHelper_NoRegister()
	{
		return UDungeonModelHelper::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonModelHelper()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonModelHelper::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonModelHelper_ExpandBounds());
				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonModelHelper_GetCenterExtent());
				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonModelHelper_GetRectAreaPoints());
				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonModelHelper_GetRectBorderPoints());
				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonModelHelper_MakeIntVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UDungeonModelHelper_MakeVector());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonModelHelper_ExpandBounds(), "ExpandBounds"); // 537508992
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonModelHelper_GetCenterExtent(), "GetCenterExtent"); // 2401223186
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonModelHelper_GetRectAreaPoints(), "GetRectAreaPoints"); // 3625058198
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonModelHelper_GetRectBorderPoints(), "GetRectBorderPoints"); // 341242366
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonModelHelper_MakeIntVector(), "MakeIntVector"); // 346370795
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDungeonModelHelper_MakeVector(), "MakeVector"); // 1498820683
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Utils/DungeonModelHelper.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Utils/DungeonModelHelper.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonModelHelper(Z_Construct_UClass_UDungeonModelHelper, &UDungeonModelHelper::StaticClass, TEXT("UDungeonModelHelper"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonModelHelper);
	UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_AddPaintCell()
	{
		struct GridDungeonModelHelper_eventAddPaintCell_Parms
		{
			FVector CellLocation;
			ADungeon* Dungeon;
			bool bAutomaticRebuild;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddPaintCell"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(GridDungeonModelHelper_eventAddPaintCell_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutomaticRebuild, GridDungeonModelHelper_eventAddPaintCell_Parms, bool);
			UProperty* NewProp_bAutomaticRebuild = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAutomaticRebuild"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutomaticRebuild, GridDungeonModelHelper_eventAddPaintCell_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bAutomaticRebuild, GridDungeonModelHelper_eventAddPaintCell_Parms), sizeof(bool), true);
			UProperty* NewProp_Dungeon = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Dungeon"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Dungeon, GridDungeonModelHelper_eventAddPaintCell_Parms), 0x0010000000000080, Z_Construct_UClass_ADungeon_NoRegister());
			UProperty* NewProp_CellLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CellLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CellLocation, GridDungeonModelHelper_eventAddPaintCell_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModelHelper.h"));
			MetaData->SetValue(NewProp_CellLocation, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetBoundingBox()
	{
		struct GridDungeonModelHelper_eventGetBoundingBox_Parms
		{
			TArray<FCell> Cells;
			FRectangle Bounds;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBoundingBox"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(GridDungeonModelHelper_eventGetBoundingBox_Parms));
			UProperty* NewProp_Bounds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Bounds"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Bounds, GridDungeonModelHelper_eventGetBoundingBox_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FRectangle());
			UProperty* NewProp_Cells = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Cells"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Cells, GridDungeonModelHelper_eventGetBoundingBox_Parms), 0x0010000008000182);
			UProperty* NewProp_Cells_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Cells, TEXT("Cells"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FCell());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModelHelper.h"));
			MetaData->SetValue(NewProp_Cells, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetCellCenter()
	{
		struct GridDungeonModelHelper_eventGetCellCenter_Parms
		{
			FCell Cell;
			FVector Center;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetCellCenter"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(GridDungeonModelHelper_eventGetCellCenter_Parms));
			UProperty* NewProp_Center = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Center"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Center, GridDungeonModelHelper_eventGetCellCenter_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Cell = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Cell"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Cell, GridDungeonModelHelper_eventGetCellCenter_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FCell());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModelHelper.h"));
			MetaData->SetValue(NewProp_Cell, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetCellConnectedRooms()
	{
		struct GridDungeonModelHelper_eventGetCellConnectedRooms_Parms
		{
			FCell Cell;
			TArray<int32> ConnectedRooms;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetCellConnectedRooms"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(GridDungeonModelHelper_eventGetCellConnectedRooms_Parms));
			UProperty* NewProp_ConnectedRooms = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ConnectedRooms"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ConnectedRooms, GridDungeonModelHelper_eventGetCellConnectedRooms_Parms), 0x0010000000000180);
			UProperty* NewProp_ConnectedRooms_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ConnectedRooms, TEXT("ConnectedRooms"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_Cell = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Cell"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Cell, GridDungeonModelHelper_eventGetCellConnectedRooms_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FCell());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModelHelper.h"));
			MetaData->SetValue(NewProp_Cell, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetCellMSTRooms()
	{
		struct GridDungeonModelHelper_eventGetCellMSTRooms_Parms
		{
			FCell Cell;
			TArray<int32> MSTRooms;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetCellMSTRooms"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(GridDungeonModelHelper_eventGetCellMSTRooms_Parms));
			UProperty* NewProp_MSTRooms = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MSTRooms"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MSTRooms, GridDungeonModelHelper_eventGetCellMSTRooms_Parms), 0x0010000000000180);
			UProperty* NewProp_MSTRooms_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MSTRooms, TEXT("MSTRooms"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_Cell = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Cell"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Cell, GridDungeonModelHelper_eventGetCellMSTRooms_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FCell());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModelHelper.h"));
			MetaData->SetValue(NewProp_Cell, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetDoorExits()
	{
		struct GridDungeonModelHelper_eventGetDoorExits_Parms
		{
			FCellDoor Door;
			FVector ExitA;
			FVector ExitB;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetDoorExits"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(GridDungeonModelHelper_eventGetDoorExits_Parms));
			UProperty* NewProp_ExitB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExitB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ExitB, GridDungeonModelHelper_eventGetDoorExits_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_ExitA = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExitA"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ExitA, GridDungeonModelHelper_eventGetDoorExits_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Door = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Door"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Door, GridDungeonModelHelper_eventGetDoorExits_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FCellDoor());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModelHelper.h"));
			MetaData->SetValue(NewProp_Door, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetRandomCellLocation()
	{
		struct GridDungeonModelHelper_eventGetRandomCellLocation_Parms
		{
			UGridDungeonModel* Model;
			UGridDungeonConfig* Config;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetRandomCellLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(GridDungeonModelHelper_eventGetRandomCellLocation_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, GridDungeonModelHelper_eventGetRandomCellLocation_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Config = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Config"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Config, GridDungeonModelHelper_eventGetRandomCellLocation_Parms), 0x0010000000000080, Z_Construct_UClass_UGridDungeonConfig_NoRegister());
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, GridDungeonModelHelper_eventGetRandomCellLocation_Parms), 0x0010000000000080, Z_Construct_UClass_UGridDungeonModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModelHelper.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_GetRoomFreeEdge()
	{
		struct GridDungeonModelHelper_eventGetRoomFreeEdge_Parms
		{
			UGridDungeonModel* Model;
			FCell RoomCell;
			TArray<FVector> FreeEdgeCenters;
			TArray<float> FreeEdgeAngles;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetRoomFreeEdge"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(GridDungeonModelHelper_eventGetRoomFreeEdge_Parms));
			UProperty* NewProp_FreeEdgeAngles = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FreeEdgeAngles"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(FreeEdgeAngles, GridDungeonModelHelper_eventGetRoomFreeEdge_Parms), 0x0010000000000180);
			UProperty* NewProp_FreeEdgeAngles_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FreeEdgeAngles, TEXT("FreeEdgeAngles"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_FreeEdgeCenters = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FreeEdgeCenters"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(FreeEdgeCenters, GridDungeonModelHelper_eventGetRoomFreeEdge_Parms), 0x0010000000000180);
			UProperty* NewProp_FreeEdgeCenters_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FreeEdgeCenters, TEXT("FreeEdgeCenters"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_RoomCell = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RoomCell"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RoomCell, GridDungeonModelHelper_eventGetRoomFreeEdge_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FCell());
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, GridDungeonModelHelper_eventGetRoomFreeEdge_Parms), 0x0010000000000080, Z_Construct_UClass_UGridDungeonModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModelHelper.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Tries to find a free edge in the room bounds that does not contain a door"));
			MetaData->SetValue(NewProp_RoomCell, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_RemovePaintCell()
	{
		struct GridDungeonModelHelper_eventRemovePaintCell_Parms
		{
			FVector CellLocation;
			ADungeon* Dungeon;
			bool bAutomaticRebuild;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RemovePaintCell"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(GridDungeonModelHelper_eventRemovePaintCell_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutomaticRebuild, GridDungeonModelHelper_eventRemovePaintCell_Parms, bool);
			UProperty* NewProp_bAutomaticRebuild = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAutomaticRebuild"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutomaticRebuild, GridDungeonModelHelper_eventRemovePaintCell_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bAutomaticRebuild, GridDungeonModelHelper_eventRemovePaintCell_Parms), sizeof(bool), true);
			UProperty* NewProp_Dungeon = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Dungeon"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Dungeon, GridDungeonModelHelper_eventRemovePaintCell_Parms), 0x0010000000000080, Z_Construct_UClass_ADungeon_NoRegister());
			UProperty* NewProp_CellLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CellLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CellLocation, GridDungeonModelHelper_eventRemovePaintCell_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModelHelper.h"));
			MetaData->SetValue(NewProp_CellLocation, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonModelHelper_ToWorldCoords()
	{
		struct GridDungeonModelHelper_eventToWorldCoords_Parms
		{
			FRectangle Bounds;
			FVector GridSize;
			FVector Location;
			FVector Size;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonModelHelper();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ToWorldCoords"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C22401, 65535, sizeof(GridDungeonModelHelper_eventToWorldCoords_Parms));
			UProperty* NewProp_Size = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Size"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Size, GridDungeonModelHelper_eventToWorldCoords_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, GridDungeonModelHelper_eventToWorldCoords_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_GridSize = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridSize"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GridSize, GridDungeonModelHelper_eventToWorldCoords_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Bounds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Bounds"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Bounds, GridDungeonModelHelper_eventToWorldCoords_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FRectangle());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModelHelper.h"));
			MetaData->SetValue(NewProp_GridSize, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_Bounds, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGridDungeonModelHelper_NoRegister()
	{
		return UGridDungeonModelHelper::StaticClass();
	}
	UClass* Z_Construct_UClass_UGridDungeonModelHelper()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonModelHelper();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UGridDungeonModelHelper::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonModelHelper_AddPaintCell());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonModelHelper_GetBoundingBox());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonModelHelper_GetCellCenter());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonModelHelper_GetCellConnectedRooms());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonModelHelper_GetCellMSTRooms());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonModelHelper_GetDoorExits());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonModelHelper_GetRandomCellLocation());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonModelHelper_GetRoomFreeEdge());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonModelHelper_RemovePaintCell());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonModelHelper_ToWorldCoords());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonModelHelper_AddPaintCell(), "AddPaintCell"); // 235675343
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonModelHelper_GetBoundingBox(), "GetBoundingBox"); // 3545772130
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonModelHelper_GetCellCenter(), "GetCellCenter"); // 1002042823
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonModelHelper_GetCellConnectedRooms(), "GetCellConnectedRooms"); // 4086623808
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonModelHelper_GetCellMSTRooms(), "GetCellMSTRooms"); // 2238379505
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonModelHelper_GetDoorExits(), "GetDoorExits"); // 1246582263
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonModelHelper_GetRandomCellLocation(), "GetRandomCellLocation"); // 1258127215
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonModelHelper_GetRoomFreeEdge(), "GetRoomFreeEdge"); // 1520620399
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonModelHelper_RemovePaintCell(), "RemovePaintCell"); // 3124821659
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonModelHelper_ToWorldCoords(), "ToWorldCoords"); // 1902567379
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Grid/GridDungeonModelHelper.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonModelHelper.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGridDungeonModelHelper(Z_Construct_UClass_UGridDungeonModelHelper, &UGridDungeonModelHelper::StaticClass, TEXT("UGridDungeonModelHelper"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGridDungeonModelHelper);
	UClass* Z_Construct_UClass_ADungeonParticleSystem_NoRegister()
	{
		return ADungeonParticleSystem::StaticClass();
	}
	UClass* Z_Construct_UClass_ADungeonParticleSystem()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = ADungeonParticleSystem::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Actors/DungeonParticleSystem.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Actors/DungeonParticleSystem.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ADungeonParticleSystem(Z_Construct_UClass_ADungeonParticleSystem, &ADungeonParticleSystem::StaticClass, TEXT("ADungeonParticleSystem"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ADungeonParticleSystem);
	UClass* Z_Construct_UClass_UDungeonPropDataAsset_NoRegister()
	{
		return UDungeonPropDataAsset::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonPropDataAsset()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonPropDataAsset::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_PreviewViewportProperties = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PreviewViewportProperties"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PreviewViewportProperties, UDungeonPropDataAsset), 0x0010000800000000, Z_Construct_UClass_UDungeonEditorViewportProperties_NoRegister());
				UProperty* NewProp_UpdateGraph = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UpdateGraph"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(UpdateGraph, UDungeonPropDataAsset), 0x0010000800000000, Z_Construct_UClass_UEdGraph_NoRegister());
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_Props = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Props"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Props, UDungeonPropDataAsset), 0x0010008000000000);
				UProperty* NewProp_Props_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Props, TEXT("Props"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000008000000000, Z_Construct_UScriptStruct_FPropTypeData());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Transition/DungeonPropDataAsset.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Transition/DungeonPropDataAsset.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A Dungeon Theme asset lets you design the look and feel of you dungeon with an intuitive graph based approach"));
				MetaData->SetValue(NewProp_PreviewViewportProperties, TEXT("ModuleRelativePath"), TEXT("Transition/DungeonPropDataAsset.h"));
				MetaData->SetValue(NewProp_UpdateGraph, TEXT("ModuleRelativePath"), TEXT("Transition/DungeonPropDataAsset.h"));
				MetaData->SetValue(NewProp_UpdateGraph, TEXT("ToolTip"), TEXT("EdGraph based representation"));
				MetaData->SetValue(NewProp_Props, TEXT("ModuleRelativePath"), TEXT("Transition/DungeonPropDataAsset.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonPropDataAsset(Z_Construct_UClass_UDungeonPropDataAsset, &UDungeonPropDataAsset::StaticClass, TEXT("UDungeonPropDataAsset"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonPropDataAsset);
	UFunction* Z_Construct_UFunction_UFloorPlanSelectorLogic_SelectNode()
	{
		UObject* Outer=Z_Construct_UClass_UFloorPlanSelectorLogic();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SelectNode"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08C20C00, 65535, sizeof(FloorPlanSelectorLogic_eventSelectNode_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, FloorPlanSelectorLogic_eventSelectNode_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, FloorPlanSelectorLogic_eventSelectNode_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, FloorPlanSelectorLogic_eventSelectNode_Parms), sizeof(bool), true);
			UProperty* NewProp_GridZ = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridZ"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridZ, FloorPlanSelectorLogic_eventSelectNode_Parms), 0x0010000000000080);
			UProperty* NewProp_GridY = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridY"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridY, FloorPlanSelectorLogic_eventSelectNode_Parms), 0x0010000000000080);
			UProperty* NewProp_GridX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridX"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridX, FloorPlanSelectorLogic_eventSelectNode_Parms), 0x0010000000000080);
			UProperty* NewProp_RandomStream = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RandomStream"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RandomStream, FloorPlanSelectorLogic_eventSelectNode_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FRandomStream());
			UProperty* NewProp_Config = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Config"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Config, FloorPlanSelectorLogic_eventSelectNode_Parms), 0x0010000000000080, Z_Construct_UClass_UFloorPlanConfig_NoRegister());
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, FloorPlanSelectorLogic_eventSelectNode_Parms), 0x0010000000000080, Z_Construct_UClass_UFloorPlanModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanSelectorLogic.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called when something enters the sphere component"));
			MetaData->SetValue(NewProp_RandomStream, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UFloorPlanSelectorLogic_NoRegister()
	{
		return UFloorPlanSelectorLogic::StaticClass();
	}
	UClass* Z_Construct_UClass_UFloorPlanSelectorLogic()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonSelectorLogic();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UFloorPlanSelectorLogic::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24301080;

				OuterClass->LinkChild(Z_Construct_UFunction_UFloorPlanSelectorLogic_SelectNode());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UFloorPlanSelectorLogic_SelectNode(), "SelectNode"); // 3099979877
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/FloorPlan/FloorPlanSelectorLogic.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanSelectorLogic.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFloorPlanSelectorLogic(Z_Construct_UClass_UFloorPlanSelectorLogic, &UFloorPlanSelectorLogic::StaticClass, TEXT("UFloorPlanSelectorLogic"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFloorPlanSelectorLogic);
	UFunction* Z_Construct_UFunction_UGridDungeonSelectorLogic_ContainsStair()
	{
		struct GridDungeonSelectorLogic_eventContainsStair_Parms
		{
			UGridDungeonModel* Model;
			FCell Cell;
			int32 GridX;
			int32 GridY;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonSelectorLogic();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ContainsStair"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(GridDungeonSelectorLogic_eventContainsStair_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GridDungeonSelectorLogic_eventContainsStair_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GridDungeonSelectorLogic_eventContainsStair_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GridDungeonSelectorLogic_eventContainsStair_Parms), sizeof(bool), true);
			UProperty* NewProp_GridY = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridY"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridY, GridDungeonSelectorLogic_eventContainsStair_Parms), 0x0010000000000080);
			UProperty* NewProp_GridX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridX"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridX, GridDungeonSelectorLogic_eventContainsStair_Parms), 0x0010000000000080);
			UProperty* NewProp_Cell = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Cell"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Cell, GridDungeonSelectorLogic_eventContainsStair_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FCell());
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, GridDungeonSelectorLogic_eventContainsStair_Parms), 0x0010000000000080, Z_Construct_UClass_UGridDungeonModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonSelectorLogic.h"));
			MetaData->SetValue(NewProp_Cell, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonSelectorLogic_IsOnCorner()
	{
		struct GridDungeonSelectorLogic_eventIsOnCorner_Parms
		{
			UGridDungeonModel* Model;
			int32 GridX;
			int32 GridY;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonSelectorLogic();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsOnCorner"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(GridDungeonSelectorLogic_eventIsOnCorner_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GridDungeonSelectorLogic_eventIsOnCorner_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GridDungeonSelectorLogic_eventIsOnCorner_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GridDungeonSelectorLogic_eventIsOnCorner_Parms), sizeof(bool), true);
			UProperty* NewProp_GridY = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridY"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridY, GridDungeonSelectorLogic_eventIsOnCorner_Parms), 0x0010000000000080);
			UProperty* NewProp_GridX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridX"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridX, GridDungeonSelectorLogic_eventIsOnCorner_Parms), 0x0010000000000080);
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, GridDungeonSelectorLogic_eventIsOnCorner_Parms), 0x0010000000000080, Z_Construct_UClass_UGridDungeonModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonSelectorLogic.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonSelectorLogic_IsPassageTooNarrow()
	{
		struct GridDungeonSelectorLogic_eventIsPassageTooNarrow_Parms
		{
			UGridDungeonModel* Model;
			int32 GridX;
			int32 GridY;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonSelectorLogic();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsPassageTooNarrow"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(GridDungeonSelectorLogic_eventIsPassageTooNarrow_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GridDungeonSelectorLogic_eventIsPassageTooNarrow_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GridDungeonSelectorLogic_eventIsPassageTooNarrow_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GridDungeonSelectorLogic_eventIsPassageTooNarrow_Parms), sizeof(bool), true);
			UProperty* NewProp_GridY = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridY"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridY, GridDungeonSelectorLogic_eventIsPassageTooNarrow_Parms), 0x0010000000000080);
			UProperty* NewProp_GridX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridX"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridX, GridDungeonSelectorLogic_eventIsPassageTooNarrow_Parms), 0x0010000000000080);
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, GridDungeonSelectorLogic_eventIsPassageTooNarrow_Parms), 0x0010000000000080, Z_Construct_UClass_UGridDungeonModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonSelectorLogic.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonSelectorLogic_IsPillarOnCorner()
	{
		struct GridDungeonSelectorLogic_eventIsPillarOnCorner_Parms
		{
			UGridDungeonModel* Model;
			int32 GridX;
			int32 GridY;
			FTransform OutCornerOffset;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGridDungeonSelectorLogic();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsPillarOnCorner"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C20401, 65535, sizeof(GridDungeonSelectorLogic_eventIsPillarOnCorner_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GridDungeonSelectorLogic_eventIsPillarOnCorner_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GridDungeonSelectorLogic_eventIsPillarOnCorner_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GridDungeonSelectorLogic_eventIsPillarOnCorner_Parms), sizeof(bool), true);
			UProperty* NewProp_OutCornerOffset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutCornerOffset"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OutCornerOffset, GridDungeonSelectorLogic_eventIsPillarOnCorner_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_GridY = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridY"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridY, GridDungeonSelectorLogic_eventIsPillarOnCorner_Parms), 0x0010000000000080);
			UProperty* NewProp_GridX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridX"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridX, GridDungeonSelectorLogic_eventIsPillarOnCorner_Parms), 0x0010000000000080);
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, GridDungeonSelectorLogic_eventIsPillarOnCorner_Parms), 0x0010000000000080, Z_Construct_UClass_UGridDungeonModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonSelectorLogic.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGridDungeonSelectorLogic_SelectNode()
	{
		UObject* Outer=Z_Construct_UClass_UGridDungeonSelectorLogic();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SelectNode"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08C20C00, 65535, sizeof(GridDungeonSelectorLogic_eventSelectNode_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GridDungeonSelectorLogic_eventSelectNode_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GridDungeonSelectorLogic_eventSelectNode_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GridDungeonSelectorLogic_eventSelectNode_Parms), sizeof(bool), true);
			UProperty* NewProp_GridY = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridY"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridY, GridDungeonSelectorLogic_eventSelectNode_Parms), 0x0010000000000080);
			UProperty* NewProp_GridX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridX"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridX, GridDungeonSelectorLogic_eventSelectNode_Parms), 0x0010000000000080);
			UProperty* NewProp_RandomStream = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RandomStream"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RandomStream, GridDungeonSelectorLogic_eventSelectNode_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FRandomStream());
			UProperty* NewProp_Cell = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Cell"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Cell, GridDungeonSelectorLogic_eventSelectNode_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FCell());
			UProperty* NewProp_Config = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Config"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Config, GridDungeonSelectorLogic_eventSelectNode_Parms), 0x0010000000000080, Z_Construct_UClass_UGridDungeonConfig_NoRegister());
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, GridDungeonSelectorLogic_eventSelectNode_Parms), 0x0010000000000080, Z_Construct_UClass_UGridDungeonModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonSelectorLogic.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called when something enters the sphere component"));
			MetaData->SetValue(NewProp_RandomStream, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_Cell, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGridDungeonSelectorLogic_NoRegister()
	{
		return UGridDungeonSelectorLogic::StaticClass();
	}
	UClass* Z_Construct_UClass_UGridDungeonSelectorLogic()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonSelectorLogic();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UGridDungeonSelectorLogic::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24301080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonSelectorLogic_ContainsStair());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonSelectorLogic_IsOnCorner());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonSelectorLogic_IsPassageTooNarrow());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonSelectorLogic_IsPillarOnCorner());
				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonSelectorLogic_SelectNode());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonSelectorLogic_ContainsStair(), "ContainsStair"); // 484552314
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonSelectorLogic_IsOnCorner(), "IsOnCorner"); // 3537789204
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonSelectorLogic_IsPassageTooNarrow(), "IsPassageTooNarrow"); // 2022431329
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonSelectorLogic_IsPillarOnCorner(), "IsPillarOnCorner"); // 2910071033
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonSelectorLogic_SelectNode(), "SelectNode"); // 3034325637
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Grid/GridDungeonSelectorLogic.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonSelectorLogic.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGridDungeonSelectorLogic(Z_Construct_UClass_UGridDungeonSelectorLogic, &UGridDungeonSelectorLogic::StaticClass, TEXT("UGridDungeonSelectorLogic"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGridDungeonSelectorLogic);
	UFunction* Z_Construct_UFunction_UIsaacDungeonSelectorLogic_SelectNode()
	{
		UObject* Outer=Z_Construct_UClass_UIsaacDungeonSelectorLogic();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SelectNode"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535, sizeof(IsaacDungeonSelectorLogic_eventSelectNode_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, IsaacDungeonSelectorLogic_eventSelectNode_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, IsaacDungeonSelectorLogic_eventSelectNode_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, IsaacDungeonSelectorLogic_eventSelectNode_Parms), sizeof(bool), true);
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, IsaacDungeonSelectorLogic_eventSelectNode_Parms), 0x0010000000000080, Z_Construct_UClass_UIsaacDungeonModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonSelectorLogic.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called when something enters the sphere component"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UIsaacDungeonSelectorLogic_NoRegister()
	{
		return UIsaacDungeonSelectorLogic::StaticClass();
	}
	UClass* Z_Construct_UClass_UIsaacDungeonSelectorLogic()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonSelectorLogic();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UIsaacDungeonSelectorLogic::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24301080;

				OuterClass->LinkChild(Z_Construct_UFunction_UIsaacDungeonSelectorLogic_SelectNode());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UIsaacDungeonSelectorLogic_SelectNode(), "SelectNode"); // 202311426
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Isaac/IsaacDungeonSelectorLogic.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonSelectorLogic.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UIsaacDungeonSelectorLogic(Z_Construct_UClass_UIsaacDungeonSelectorLogic, &UIsaacDungeonSelectorLogic::StaticClass, TEXT("UIsaacDungeonSelectorLogic"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UIsaacDungeonSelectorLogic);
	UFunction* Z_Construct_UFunction_USnapDungeonSelectorLogic_SelectNode()
	{
		UObject* Outer=Z_Construct_UClass_USnapDungeonSelectorLogic();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SelectNode"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535, sizeof(SnapDungeonSelectorLogic_eventSelectNode_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SnapDungeonSelectorLogic_eventSelectNode_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SnapDungeonSelectorLogic_eventSelectNode_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SnapDungeonSelectorLogic_eventSelectNode_Parms), sizeof(bool), true);
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, SnapDungeonSelectorLogic_eventSelectNode_Parms), 0x0010000000000080, Z_Construct_UClass_USnapDungeonModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonSelectorLogic.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called when something enters the sphere component"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_USnapDungeonSelectorLogic_NoRegister()
	{
		return USnapDungeonSelectorLogic::StaticClass();
	}
	UClass* Z_Construct_UClass_USnapDungeonSelectorLogic()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonSelectorLogic();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = USnapDungeonSelectorLogic::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24301080;

				OuterClass->LinkChild(Z_Construct_UFunction_USnapDungeonSelectorLogic_SelectNode());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USnapDungeonSelectorLogic_SelectNode(), "SelectNode"); // 2246511917
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Snap/SnapDungeonSelectorLogic.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonSelectorLogic.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USnapDungeonSelectorLogic(Z_Construct_UClass_USnapDungeonSelectorLogic, &USnapDungeonSelectorLogic::StaticClass, TEXT("USnapDungeonSelectorLogic"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USnapDungeonSelectorLogic);
	UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_EGridSpatialCellOccupation()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_EGridSpatialCellOccupation_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EGridSpatialCellOccupation"), 0, Get_Z_Construct_UEnum_DungeonArchitectRuntime_EGridSpatialCellOccupation_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EGridSpatialCellOccupation"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EGridSpatialCellOccupation::DontCare")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EGridSpatialCellOccupation::Occupied")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EGridSpatialCellOccupation::Empty")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EGridSpatialCellOccupation::EGridSpatialCellOccupation_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EGridSpatialCellOccupation");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("DontCare.DisplayName"), TEXT("Ignore"));
			MetaData->SetValue(ReturnEnum, TEXT("Empty.DisplayName"), TEXT("Empty"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraintCellData.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Occupied.DisplayName"), TEXT("Occupied"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_EGridSpatialCellOccupation_CRC() { return 2261844779U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGridSpatialConstraintCellData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FGridSpatialConstraintCellData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GridSpatialConstraintCellData"), sizeof(FGridSpatialConstraintCellData), Get_Z_Construct_UScriptStruct_FGridSpatialConstraintCellData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GridSpatialConstraintCellData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGridSpatialConstraintCellData>, EStructFlags(0x00000201));
			UProperty* NewProp_OccupationConstraint = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OccupationConstraint"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(OccupationConstraint, FGridSpatialConstraintCellData), 0x0010000000000005, Z_Construct_UEnum_DungeonArchitectRuntime_EGridSpatialCellOccupation());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraintCellData.h"));
			MetaData->SetValue(NewProp_OccupationConstraint, TEXT("Category"), TEXT("GridSpatialConstraintCellData"));
			MetaData->SetValue(NewProp_OccupationConstraint, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraintCellData.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGridSpatialConstraintCellData_CRC() { return 3159528538U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGridSpatialConstraint2x2Data()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FGridSpatialConstraint2x2Data_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GridSpatialConstraint2x2Data"), sizeof(FGridSpatialConstraint2x2Data), Get_Z_Construct_UScriptStruct_FGridSpatialConstraint2x2Data_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GridSpatialConstraint2x2Data"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGridSpatialConstraint2x2Data>, EStructFlags(0x00000201));
			UProperty* NewProp_Cells = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Cells"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Cells, FGridSpatialConstraint2x2Data), 0x0010000000000005);
			UProperty* NewProp_Cells_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Cells, TEXT("Cells"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGridSpatialConstraintCellData());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraint2x2.h"));
			MetaData->SetValue(NewProp_Cells, TEXT("Category"), TEXT("GridSpatialConstraint2x2Data"));
			MetaData->SetValue(NewProp_Cells, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraint2x2.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGridSpatialConstraint2x2Data_CRC() { return 3753291450U; }
	UClass* Z_Construct_UClass_UGridSpatialConstraint2x2_NoRegister()
	{
		return UGridSpatialConstraint2x2::StaticClass();
	}
	UClass* Z_Construct_UClass_UGridSpatialConstraint2x2()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonSpatialConstraint();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UGridSpatialConstraint2x2::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20301080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Configuration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Configuration"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Configuration, UGridSpatialConstraint2x2), 0x0010000000000005, Z_Construct_UScriptStruct_FGridSpatialConstraint2x2Data());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Grid/SpatialConstraints/GridSpatialConstraint2x2.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraint2x2.h"));
				MetaData->SetValue(NewProp_Configuration, TEXT("Category"), TEXT("Spatial Setup"));
				MetaData->SetValue(NewProp_Configuration, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraint2x2.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGridSpatialConstraint2x2(Z_Construct_UClass_UGridSpatialConstraint2x2, &UGridSpatialConstraint2x2::StaticClass, TEXT("UGridSpatialConstraint2x2"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGridSpatialConstraint2x2);
	UScriptStruct* Z_Construct_UScriptStruct_FGridSpatialConstraint3x3Data()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FGridSpatialConstraint3x3Data_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GridSpatialConstraint3x3Data"), sizeof(FGridSpatialConstraint3x3Data), Get_Z_Construct_UScriptStruct_FGridSpatialConstraint3x3Data_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GridSpatialConstraint3x3Data"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGridSpatialConstraint3x3Data>, EStructFlags(0x00000201));
			UProperty* NewProp_Cells = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Cells"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Cells, FGridSpatialConstraint3x3Data), 0x0010000000000005);
			UProperty* NewProp_Cells_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Cells, TEXT("Cells"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGridSpatialConstraintCellData());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraint3x3.h"));
			MetaData->SetValue(NewProp_Cells, TEXT("Category"), TEXT("GridSpatialConstraint3x3Data"));
			MetaData->SetValue(NewProp_Cells, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraint3x3.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGridSpatialConstraint3x3Data_CRC() { return 1867165318U; }
	UClass* Z_Construct_UClass_UGridSpatialConstraint3x3_NoRegister()
	{
		return UGridSpatialConstraint3x3::StaticClass();
	}
	UClass* Z_Construct_UClass_UGridSpatialConstraint3x3()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonSpatialConstraint();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UGridSpatialConstraint3x3::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20301080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Configuration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Configuration"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Configuration, UGridSpatialConstraint3x3), 0x0010000000000005, Z_Construct_UScriptStruct_FGridSpatialConstraint3x3Data());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Grid/SpatialConstraints/GridSpatialConstraint3x3.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraint3x3.h"));
				MetaData->SetValue(NewProp_Configuration, TEXT("Category"), TEXT("Spatial Setup"));
				MetaData->SetValue(NewProp_Configuration, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraint3x3.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGridSpatialConstraint3x3(Z_Construct_UClass_UGridSpatialConstraint3x3, &UGridSpatialConstraint3x3::StaticClass, TEXT("UGridSpatialConstraint3x3"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGridSpatialConstraint3x3);
	UScriptStruct* Z_Construct_UScriptStruct_FGridSpatialConstraintEdgeData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UScriptStruct_FGridSpatialConstraintEdgeData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GridSpatialConstraintEdgeData"), sizeof(FGridSpatialConstraintEdgeData), Get_Z_Construct_UScriptStruct_FGridSpatialConstraintEdgeData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GridSpatialConstraintEdgeData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGridSpatialConstraintEdgeData>, EStructFlags(0x00000201));
			UProperty* NewProp_Cells = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Cells"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Cells, FGridSpatialConstraintEdgeData), 0x0010000000000005);
			UProperty* NewProp_Cells_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Cells, TEXT("Cells"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGridSpatialConstraintCellData());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraintEdge.h"));
			MetaData->SetValue(NewProp_Cells, TEXT("Category"), TEXT("GridSpatialConstraintEdgeData"));
			MetaData->SetValue(NewProp_Cells, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraintEdge.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGridSpatialConstraintEdgeData_CRC() { return 1641416935U; }
	UClass* Z_Construct_UClass_UGridSpatialConstraintEdge_NoRegister()
	{
		return UGridSpatialConstraintEdge::StaticClass();
	}
	UClass* Z_Construct_UClass_UGridSpatialConstraintEdge()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonSpatialConstraint();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UGridSpatialConstraintEdge::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20301080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Configuration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Configuration"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Configuration, UGridSpatialConstraintEdge), 0x0010000000000005, Z_Construct_UScriptStruct_FGridSpatialConstraintEdgeData());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Grid/SpatialConstraints/GridSpatialConstraintEdge.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraintEdge.h"));
				MetaData->SetValue(NewProp_Configuration, TEXT("Category"), TEXT("Spatial Setup"));
				MetaData->SetValue(NewProp_Configuration, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/SpatialConstraints/GridSpatialConstraintEdge.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGridSpatialConstraintEdge(Z_Construct_UClass_UGridSpatialConstraintEdge, &UGridSpatialConstraintEdge::StaticClass, TEXT("UGridSpatialConstraintEdge"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGridSpatialConstraintEdge);
	UClass* Z_Construct_UClass_UDungeonToolData_NoRegister()
	{
		return UDungeonToolData::StaticClass();
	}
	UClass* Z_Construct_UClass_UDungeonToolData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UDungeonToolData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/DungeonToolData.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/DungeonToolData.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDungeonToolData(Z_Construct_UClass_UDungeonToolData, &UDungeonToolData::StaticClass, TEXT("UDungeonToolData"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDungeonToolData);
	UClass* Z_Construct_UClass_UFloorPlanToolData_NoRegister()
	{
		return UFloorPlanToolData::StaticClass();
	}
	UClass* Z_Construct_UClass_UFloorPlanToolData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonToolData();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UFloorPlanToolData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/FloorPlan/FloorPlanToolData.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanToolData.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFloorPlanToolData(Z_Construct_UClass_UFloorPlanToolData, &UFloorPlanToolData::StaticClass, TEXT("UFloorPlanToolData"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFloorPlanToolData);
	UClass* Z_Construct_UClass_UGridDungeonToolData_NoRegister()
	{
		return UGridDungeonToolData::StaticClass();
	}
	UClass* Z_Construct_UClass_UGridDungeonToolData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonToolData();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UGridDungeonToolData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Borders = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Borders"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Borders, UGridDungeonToolData), 0x0010000000000000);
				UProperty* NewProp_Borders_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Borders, TEXT("Borders"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FRectangle());
				UProperty* NewProp_Rectangles = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Rectangles"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Rectangles, UGridDungeonToolData), 0x0010000000000000);
				UProperty* NewProp_Rectangles_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Rectangles, TEXT("Rectangles"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FRectangle());
				UProperty* NewProp_PaintedCells = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PaintedCells"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(PaintedCells, UGridDungeonToolData), 0x0010000000000000);
				UProperty* NewProp_PaintedCells_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PaintedCells, TEXT("PaintedCells"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FIntVector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Grid/GridDungeonToolData.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonToolData.h"));
				MetaData->SetValue(NewProp_Borders, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonToolData.h"));
				MetaData->SetValue(NewProp_Borders, TEXT("ToolTip"), TEXT("The platform borders defined in the scene using the \"Border\" tool"));
				MetaData->SetValue(NewProp_Rectangles, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonToolData.h"));
				MetaData->SetValue(NewProp_Rectangles, TEXT("ToolTip"), TEXT("The platform rectangles defined in the scene using the \"Rectangle\" tool"));
				MetaData->SetValue(NewProp_PaintedCells, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonToolData.h"));
				MetaData->SetValue(NewProp_PaintedCells, TEXT("ToolTip"), TEXT("The cells painted by the \"Paint\" tool"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGridDungeonToolData(Z_Construct_UClass_UGridDungeonToolData, &UGridDungeonToolData::StaticClass, TEXT("UGridDungeonToolData"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGridDungeonToolData);
	UClass* Z_Construct_UClass_UIsaacDungeonToolData_NoRegister()
	{
		return UIsaacDungeonToolData::StaticClass();
	}
	UClass* Z_Construct_UClass_UIsaacDungeonToolData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonToolData();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UIsaacDungeonToolData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_PaintedCells = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PaintedCells"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(PaintedCells, UIsaacDungeonToolData), 0x0010000000000000);
				UProperty* NewProp_PaintedCells_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PaintedCells, TEXT("PaintedCells"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FIntVector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Isaac/IsaacDungeonToolData.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonToolData.h"));
				MetaData->SetValue(NewProp_PaintedCells, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonToolData.h"));
				MetaData->SetValue(NewProp_PaintedCells, TEXT("ToolTip"), TEXT("The cells painted by the \"Paint\" tool"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UIsaacDungeonToolData(Z_Construct_UClass_UIsaacDungeonToolData, &UIsaacDungeonToolData::StaticClass, TEXT("UIsaacDungeonToolData"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UIsaacDungeonToolData);
	UClass* Z_Construct_UClass_USnapDungeonToolData_NoRegister()
	{
		return USnapDungeonToolData::StaticClass();
	}
	UClass* Z_Construct_UClass_USnapDungeonToolData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonToolData();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = USnapDungeonToolData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Snap/SnapDungeonToolData.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonToolData.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USnapDungeonToolData(Z_Construct_UClass_USnapDungeonToolData, &USnapDungeonToolData::StaticClass, TEXT("USnapDungeonToolData"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USnapDungeonToolData);
	UFunction* Z_Construct_UFunction_UFloorPlanTransformLogic_GetNodeOffset()
	{
		UObject* Outer=Z_Construct_UClass_UFloorPlanTransformLogic();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNodeOffset"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08C20C00, 65535, sizeof(FloorPlanTransformLogic_eventGetNodeOffset_Parms));
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Offset, FloorPlanTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_GridY = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridY"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridY, FloorPlanTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000080);
			UProperty* NewProp_GridX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridX"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridX, FloorPlanTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000080);
			UProperty* NewProp_RandomStream = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RandomStream"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RandomStream, FloorPlanTransformLogic_eventGetNodeOffset_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FRandomStream());
			UProperty* NewProp_Config = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Config"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Config, FloorPlanTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000080, Z_Construct_UClass_UFloorPlanConfig_NoRegister());
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, FloorPlanTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000080, Z_Construct_UClass_UFloorPlanModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanTransformLogic.h"));
			MetaData->SetValue(NewProp_RandomStream, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UFloorPlanTransformLogic_NoRegister()
	{
		return UFloorPlanTransformLogic::StaticClass();
	}
	UClass* Z_Construct_UClass_UFloorPlanTransformLogic()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonTransformLogic();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UFloorPlanTransformLogic::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24301080;

				OuterClass->LinkChild(Z_Construct_UFunction_UFloorPlanTransformLogic_GetNodeOffset());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UFloorPlanTransformLogic_GetNodeOffset(), "GetNodeOffset"); // 3410855356
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/FloorPlan/FloorPlanTransformLogic.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/FloorPlanTransformLogic.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UFloorPlanTransformLogic(Z_Construct_UClass_UFloorPlanTransformLogic, &UFloorPlanTransformLogic::StaticClass, TEXT("UFloorPlanTransformLogic"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UFloorPlanTransformLogic);
	UFunction* Z_Construct_UFunction_UGridDungeonTransformLogic_GetNodeOffset()
	{
		UObject* Outer=Z_Construct_UClass_UGridDungeonTransformLogic();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNodeOffset"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08C20C00, 65535, sizeof(GridDungeonTransformLogic_eventGetNodeOffset_Parms));
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Offset, GridDungeonTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_GridY = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridY"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridY, GridDungeonTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000080);
			UProperty* NewProp_GridX = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GridX"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GridX, GridDungeonTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000080);
			UProperty* NewProp_RandomStream = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RandomStream"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RandomStream, GridDungeonTransformLogic_eventGetNodeOffset_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FRandomStream());
			UProperty* NewProp_Cell = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Cell"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Cell, GridDungeonTransformLogic_eventGetNodeOffset_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FCell());
			UProperty* NewProp_Config = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Config"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Config, GridDungeonTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000080, Z_Construct_UClass_UGridDungeonConfig_NoRegister());
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, GridDungeonTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000080, Z_Construct_UClass_UGridDungeonModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonTransformLogic.h"));
			MetaData->SetValue(NewProp_RandomStream, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_Cell, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGridDungeonTransformLogic_NoRegister()
	{
		return UGridDungeonTransformLogic::StaticClass();
	}
	UClass* Z_Construct_UClass_UGridDungeonTransformLogic()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonTransformLogic();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UGridDungeonTransformLogic::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24301080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGridDungeonTransformLogic_GetNodeOffset());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGridDungeonTransformLogic_GetNodeOffset(), "GetNodeOffset"); // 4119693983
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Grid/GridDungeonTransformLogic.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/GridDungeonTransformLogic.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGridDungeonTransformLogic(Z_Construct_UClass_UGridDungeonTransformLogic, &UGridDungeonTransformLogic::StaticClass, TEXT("UGridDungeonTransformLogic"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGridDungeonTransformLogic);
	UFunction* Z_Construct_UFunction_UIsaacDungeonTransformLogic_GetNodeOffset()
	{
		UObject* Outer=Z_Construct_UClass_UIsaacDungeonTransformLogic();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNodeOffset"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08C20C00, 65535, sizeof(IsaacDungeonTransformLogic_eventGetNodeOffset_Parms));
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Offset, IsaacDungeonTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, IsaacDungeonTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000080, Z_Construct_UClass_UIsaacDungeonModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonTransformLogic.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UIsaacDungeonTransformLogic_NoRegister()
	{
		return UIsaacDungeonTransformLogic::StaticClass();
	}
	UClass* Z_Construct_UClass_UIsaacDungeonTransformLogic()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonTransformLogic();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UIsaacDungeonTransformLogic::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24301080;

				OuterClass->LinkChild(Z_Construct_UFunction_UIsaacDungeonTransformLogic_GetNodeOffset());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UIsaacDungeonTransformLogic_GetNodeOffset(), "GetNodeOffset"); // 1836112422
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Isaac/IsaacDungeonTransformLogic.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/IsaacDungeonTransformLogic.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UIsaacDungeonTransformLogic(Z_Construct_UClass_UIsaacDungeonTransformLogic, &UIsaacDungeonTransformLogic::StaticClass, TEXT("UIsaacDungeonTransformLogic"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UIsaacDungeonTransformLogic);
	UFunction* Z_Construct_UFunction_USnapDungeonTransformLogic_GetNodeOffset()
	{
		UObject* Outer=Z_Construct_UClass_USnapDungeonTransformLogic();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNodeOffset"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08C20C00, 65535, sizeof(SnapDungeonTransformLogic_eventGetNodeOffset_Parms));
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Offset, SnapDungeonTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000180, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Model"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Model, SnapDungeonTransformLogic_eventGetNodeOffset_Parms), 0x0010000000000080, Z_Construct_UClass_USnapDungeonModel_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Dungeon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonTransformLogic.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_USnapDungeonTransformLogic_NoRegister()
	{
		return USnapDungeonTransformLogic::StaticClass();
	}
	UClass* Z_Construct_UClass_USnapDungeonTransformLogic()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDungeonTransformLogic();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = USnapDungeonTransformLogic::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24301080;

				OuterClass->LinkChild(Z_Construct_UFunction_USnapDungeonTransformLogic_GetNodeOffset());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USnapDungeonTransformLogic_GetNodeOffset(), "GetNodeOffset"); // 3466283052
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Snap/SnapDungeonTransformLogic.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/SnapDungeonTransformLogic.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USnapDungeonTransformLogic(Z_Construct_UClass_USnapDungeonTransformLogic, &USnapDungeonTransformLogic::StaticClass, TEXT("USnapDungeonTransformLogic"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USnapDungeonTransformLogic);
	UClass* Z_Construct_UClass_ADungeonVolume_NoRegister()
	{
		return ADungeonVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_ADungeonVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AVolume();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = ADungeonVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(RealtimeUpdate, ADungeonVolume, bool);
				UProperty* NewProp_RealtimeUpdate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RealtimeUpdate"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(RealtimeUpdate, ADungeonVolume), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(RealtimeUpdate, ADungeonVolume), sizeof(bool), true);
				UProperty* NewProp_Dungeon = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Dungeon"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Dungeon, ADungeonVolume), 0x0010000000000005, Z_Construct_UClass_ADungeon_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Brush Physics Object Display Rendering Physics Input Blueprint"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Volumes/DungeonVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Volumes/DungeonVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_RealtimeUpdate, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_RealtimeUpdate, TEXT("ModuleRelativePath"), TEXT("Public/Core/Volumes/DungeonVolume.h"));
				MetaData->SetValue(NewProp_Dungeon, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_Dungeon, TEXT("ModuleRelativePath"), TEXT("Public/Core/Volumes/DungeonVolume.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ADungeonVolume(Z_Construct_UClass_ADungeonVolume, &ADungeonVolume::StaticClass, TEXT("ADungeonVolume"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ADungeonVolume);
	UClass* Z_Construct_UClass_ADungeonMirrorVolume_NoRegister()
	{
		return ADungeonMirrorVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_ADungeonMirrorVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ADungeonVolume();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = ADungeonMirrorVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Brush Physics Object Display Rendering Physics Input Blueprint"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Volumes/DungeonMirrorVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Volumes/DungeonMirrorVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ADungeonMirrorVolume(Z_Construct_UClass_ADungeonMirrorVolume, &ADungeonMirrorVolume::StaticClass, TEXT("ADungeonMirrorVolume"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ADungeonMirrorVolume);
	UClass* Z_Construct_UClass_ADungeonNegationVolume_NoRegister()
	{
		return ADungeonNegationVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_ADungeonNegationVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ADungeonVolume();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = ADungeonNegationVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(AffectsUserDefinedCells, ADungeonNegationVolume, bool);
				UProperty* NewProp_AffectsUserDefinedCells = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AffectsUserDefinedCells"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AffectsUserDefinedCells, ADungeonNegationVolume), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(AffectsUserDefinedCells, ADungeonNegationVolume), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(Reversed, ADungeonNegationVolume, bool);
				UProperty* NewProp_Reversed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Reversed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Reversed, ADungeonNegationVolume), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(Reversed, ADungeonNegationVolume), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Brush Physics Object Display Rendering Physics Input Blueprint"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Volumes/DungeonNegationVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Volumes/DungeonNegationVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_AffectsUserDefinedCells, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_AffectsUserDefinedCells, TEXT("ModuleRelativePath"), TEXT("Public/Core/Volumes/DungeonNegationVolume.h"));
				MetaData->SetValue(NewProp_AffectsUserDefinedCells, TEXT("ToolTip"), TEXT("Indicates if the volume affects user defined cells (e.g. placed with platform volumes, paint tool etc)"));
				MetaData->SetValue(NewProp_Reversed, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_Reversed, TEXT("ModuleRelativePath"), TEXT("Public/Core/Volumes/DungeonNegationVolume.h"));
				MetaData->SetValue(NewProp_Reversed, TEXT("ToolTip"), TEXT("Indicates if the negation should be reversed, i.e. everything outside this volume is negated"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ADungeonNegationVolume(Z_Construct_UClass_ADungeonNegationVolume, &ADungeonNegationVolume::StaticClass, TEXT("ADungeonNegationVolume"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ADungeonNegationVolume);
	UClass* Z_Construct_UClass_ADungeonThemeOverrideVolume_NoRegister()
	{
		return ADungeonThemeOverrideVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_ADungeonThemeOverrideVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ADungeonVolume();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = ADungeonThemeOverrideVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ThemeOverride = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ThemeOverride"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ThemeOverride, ADungeonThemeOverrideVolume), 0x0010000000000005, Z_Construct_UClass_UDungeonThemeAsset_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(Reversed, ADungeonThemeOverrideVolume, bool);
				UProperty* NewProp_Reversed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Reversed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Reversed, ADungeonThemeOverrideVolume), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(Reversed, ADungeonThemeOverrideVolume), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Brush Physics Object Display Rendering Physics Input Blueprint"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Core/Volumes/DungeonThemeOverrideVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Core/Volumes/DungeonThemeOverrideVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_ThemeOverride, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_ThemeOverride, TEXT("ModuleRelativePath"), TEXT("Public/Core/Volumes/DungeonThemeOverrideVolume.h"));
				MetaData->SetValue(NewProp_Reversed, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_Reversed, TEXT("ModuleRelativePath"), TEXT("Public/Core/Volumes/DungeonThemeOverrideVolume.h"));
				MetaData->SetValue(NewProp_Reversed, TEXT("ToolTip"), TEXT("Indicates if the bounds of this volume should be reversed, i.e. everything outside this volume is overridden"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ADungeonThemeOverrideVolume(Z_Construct_UClass_ADungeonThemeOverrideVolume, &ADungeonThemeOverrideVolume::StaticClass, TEXT("ADungeonThemeOverrideVolume"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ADungeonThemeOverrideVolume);
	UClass* Z_Construct_UClass_AFloorPlanDoorVolume_NoRegister()
	{
		return AFloorPlanDoorVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_AFloorPlanDoorVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ADungeonVolume();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = AFloorPlanDoorVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DoorMarker = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DoorMarker"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DoorMarker, AFloorPlanDoorVolume), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Brush Physics Object Display Rendering Physics Input Blueprint"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/FloorPlan/Volumes/FloorPlanDoorVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/Volumes/FloorPlanDoorVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_DoorMarker, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_DoorMarker, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/Volumes/FloorPlanDoorVolume.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AFloorPlanDoorVolume(Z_Construct_UClass_AFloorPlanDoorVolume, &AFloorPlanDoorVolume::StaticClass, TEXT("AFloorPlanDoorVolume"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AFloorPlanDoorVolume);
	UClass* Z_Construct_UClass_AFloorPlanRoomVolume_NoRegister()
	{
		return AFloorPlanRoomVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_AFloorPlanRoomVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ADungeonVolume();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = AFloorPlanRoomVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_PerFloorCenterMarker = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PerFloorCenterMarker"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PerFloorCenterMarker, AFloorPlanRoomVolume), 0x0010000000000005);
				UProperty* NewProp_CenterMarker = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CenterMarker"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(CenterMarker, AFloorPlanRoomVolume), 0x0010000000000005);
				UProperty* NewProp_DoorMarker = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DoorMarker"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DoorMarker, AFloorPlanRoomVolume), 0x0010000000000005);
				UProperty* NewProp_CeilingMarker = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CeilingMarker"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(CeilingMarker, AFloorPlanRoomVolume), 0x0010000000000005);
				UProperty* NewProp_GroundMarker = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("GroundMarker"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(GroundMarker, AFloorPlanRoomVolume), 0x0010000000000005);
				UProperty* NewProp_WallMarker = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WallMarker"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(WallMarker, AFloorPlanRoomVolume), 0x0010000000000005);
				UProperty* NewProp_Priority = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Priority"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Priority, AFloorPlanRoomVolume), 0x0010000000000005);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bConnectDoors, AFloorPlanRoomVolume, bool);
				UProperty* NewProp_bConnectDoors = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bConnectDoors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bConnectDoors, AFloorPlanRoomVolume), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bConnectDoors, AFloorPlanRoomVolume), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCreateWalls, AFloorPlanRoomVolume, bool);
				UProperty* NewProp_bCreateWalls = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCreateWalls"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCreateWalls, AFloorPlanRoomVolume), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bCreateWalls, AFloorPlanRoomVolume), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Brush Physics Object Display Rendering Physics Input Blueprint"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/FloorPlan/Volumes/FloorPlanRoomVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/Volumes/FloorPlanRoomVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_PerFloorCenterMarker, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_PerFloorCenterMarker, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/Volumes/FloorPlanRoomVolume.h"));
				MetaData->SetValue(NewProp_PerFloorCenterMarker, TEXT("ToolTip"), TEXT("The marker on the center of the room, emitted at each floor it spans"));
				MetaData->SetValue(NewProp_CenterMarker, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_CenterMarker, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/Volumes/FloorPlanRoomVolume.h"));
				MetaData->SetValue(NewProp_CenterMarker, TEXT("ToolTip"), TEXT("Will emit a marker at the center of the volume on each floor it overlaps with"));
				MetaData->SetValue(NewProp_DoorMarker, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_DoorMarker, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/Volumes/FloorPlanRoomVolume.h"));
				MetaData->SetValue(NewProp_CeilingMarker, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_CeilingMarker, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/Volumes/FloorPlanRoomVolume.h"));
				MetaData->SetValue(NewProp_GroundMarker, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_GroundMarker, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/Volumes/FloorPlanRoomVolume.h"));
				MetaData->SetValue(NewProp_WallMarker, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_WallMarker, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/Volumes/FloorPlanRoomVolume.h"));
				MetaData->SetValue(NewProp_Priority, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_Priority, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/Volumes/FloorPlanRoomVolume.h"));
				MetaData->SetValue(NewProp_Priority, TEXT("ToolTip"), TEXT("Give a higher priority to the volume chunk so it overrides everything in its path"));
				MetaData->SetValue(NewProp_bConnectDoors, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_bConnectDoors, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/Volumes/FloorPlanRoomVolume.h"));
				MetaData->SetValue(NewProp_bConnectDoors, TEXT("ToolTip"), TEXT("Should it be connected with doors"));
				MetaData->SetValue(NewProp_bCreateWalls, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_bCreateWalls, TEXT("ModuleRelativePath"), TEXT("Public/Builders/FloorPlan/Volumes/FloorPlanRoomVolume.h"));
				MetaData->SetValue(NewProp_bCreateWalls, TEXT("ToolTip"), TEXT("Should the walls be generated around this room"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AFloorPlanRoomVolume(Z_Construct_UClass_AFloorPlanRoomVolume, &AFloorPlanRoomVolume::StaticClass, TEXT("AFloorPlanRoomVolume"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AFloorPlanRoomVolume);
	UClass* Z_Construct_UClass_AGridDungeonPlatformVolume_NoRegister()
	{
		return AGridDungeonPlatformVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_AGridDungeonPlatformVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ADungeonVolume();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = AGridDungeonPlatformVolume::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CellType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CellType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(CellType, AGridDungeonPlatformVolume), 0x0010000000000005, Z_Construct_UEnum_DungeonArchitectRuntime_FCellType());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Brush Physics Object Display Rendering Physics Input Blueprint"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Grid/Volumes/GridDungeonPlatformVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/Volumes/GridDungeonPlatformVolume.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_CellType, TEXT("Category"), TEXT("Dungeon"));
				MetaData->SetValue(NewProp_CellType, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Grid/Volumes/GridDungeonPlatformVolume.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AGridDungeonPlatformVolume(Z_Construct_UClass_AGridDungeonPlatformVolume, &AGridDungeonPlatformVolume::StaticClass, TEXT("AGridDungeonPlatformVolume"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AGridDungeonPlatformVolume);
	UClass* Z_Construct_UClass_USimpleIsaacRoomLayoutBuilder_NoRegister()
	{
		return USimpleIsaacRoomLayoutBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_USimpleIsaacRoomLayoutBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UIsaacRoomLayoutBuilder();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = USimpleIsaacRoomLayoutBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20301080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Isaac/RoomLayouts/SimpleIsaacRoomLayoutBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/RoomLayouts/SimpleIsaacRoomLayoutBuilder.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USimpleIsaacRoomLayoutBuilder(Z_Construct_UClass_USimpleIsaacRoomLayoutBuilder, &USimpleIsaacRoomLayoutBuilder::StaticClass, TEXT("USimpleIsaacRoomLayoutBuilder"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USimpleIsaacRoomLayoutBuilder);
	UClass* Z_Construct_UClass_UStylizedIsaacRoomLayoutBuilder_NoRegister()
	{
		return UStylizedIsaacRoomLayoutBuilder::StaticClass();
	}
	UClass* Z_Construct_UClass_UStylizedIsaacRoomLayoutBuilder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UIsaacRoomLayoutBuilder();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = UStylizedIsaacRoomLayoutBuilder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20301080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_maxBrushSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("maxBrushSize"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(maxBrushSize, UStylizedIsaacRoomLayoutBuilder), 0x0010000000000005);
				UProperty* NewProp_minBrushSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("minBrushSize"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(minBrushSize, UStylizedIsaacRoomLayoutBuilder), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Isaac/RoomLayouts/StylizedIsaacRoomLayoutBuilder.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/RoomLayouts/StylizedIsaacRoomLayoutBuilder.h"));
				MetaData->SetValue(NewProp_maxBrushSize, TEXT("Category"), TEXT("LayoutBuilder"));
				MetaData->SetValue(NewProp_maxBrushSize, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/RoomLayouts/StylizedIsaacRoomLayoutBuilder.h"));
				MetaData->SetValue(NewProp_minBrushSize, TEXT("Category"), TEXT("LayoutBuilder"));
				MetaData->SetValue(NewProp_minBrushSize, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Isaac/RoomLayouts/StylizedIsaacRoomLayoutBuilder.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UStylizedIsaacRoomLayoutBuilder(Z_Construct_UClass_UStylizedIsaacRoomLayoutBuilder, &UStylizedIsaacRoomLayoutBuilder::StaticClass, TEXT("UStylizedIsaacRoomLayoutBuilder"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UStylizedIsaacRoomLayoutBuilder);
	UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_EUSnapDoorMeshType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_EUSnapDoorMeshType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EUSnapDoorMeshType"), 0, Get_Z_Construct_UEnum_DungeonArchitectRuntime_EUSnapDoorMeshType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EUSnapDoorMeshType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EUSnapDoorMeshType::StaticMesh")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EUSnapDoorMeshType::Blueprint")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EUSnapDoorMeshType::EUSnapDoorMeshType_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EUSnapDoorMeshType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Blueprint.DisplayName"), TEXT("Blueprint Class"));
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoorMeshInfo.h"));
			MetaData->SetValue(ReturnEnum, TEXT("StaticMesh.DisplayName"), TEXT("Static Mesh"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_EUSnapDoorMeshType_CRC() { return 3249502978U; }
	UClass* Z_Construct_UClass_USnapDoorMeshInfo_NoRegister()
	{
		return USnapDoorMeshInfo::StaticClass();
	}
	UClass* Z_Construct_UClass_USnapDoorMeshInfo()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = USnapDoorMeshInfo::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BlueprintClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlueprintClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(BlueprintClass, USnapDoorMeshInfo), 0x0014000000000001, Z_Construct_UClass_AActor_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_MeshComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MeshComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MeshComponent, USnapDoorMeshInfo), 0x0010000000080009, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_MeshType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MeshType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(MeshType, USnapDoorMeshInfo), 0x0010000000000001, Z_Construct_UEnum_DungeonArchitectRuntime_EUSnapDoorMeshType());
				UProperty* NewProp_Transform = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Transform"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Transform, USnapDoorMeshInfo), 0x0010000000000001, Z_Construct_UScriptStruct_FTransform());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Snap/Module/SnapDoorMeshInfo.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoorMeshInfo.h"));
				MetaData->SetValue(NewProp_BlueprintClass, TEXT("Category"), TEXT("Snap Door"));
				MetaData->SetValue(NewProp_BlueprintClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoorMeshInfo.h"));
				MetaData->SetValue(NewProp_MeshComponent, TEXT("Category"), TEXT("Snap Door"));
				MetaData->SetValue(NewProp_MeshComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MeshComponent, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoorMeshInfo.h"));
				MetaData->SetValue(NewProp_MeshType, TEXT("Category"), TEXT("Snap Door"));
				MetaData->SetValue(NewProp_MeshType, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoorMeshInfo.h"));
				MetaData->SetValue(NewProp_Transform, TEXT("Category"), TEXT("Snap Door"));
				MetaData->SetValue(NewProp_Transform, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoorMeshInfo.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USnapDoorMeshInfo(Z_Construct_UClass_USnapDoorMeshInfo, &USnapDoorMeshInfo::StaticClass, TEXT("USnapDoorMeshInfo"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USnapDoorMeshInfo);
	UClass* Z_Construct_UClass_USnapDoorAsset_NoRegister()
	{
		return USnapDoorAsset::StaticClass();
	}
	UClass* Z_Construct_UClass_USnapDoorAsset()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = USnapDoorAsset::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ClosedMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClosedMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ClosedMesh, USnapDoorAsset), 0x0010000000000000, Z_Construct_UClass_USnapDoorMeshInfo_NoRegister());
				UProperty* NewProp_DoorMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DoorMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DoorMesh, USnapDoorAsset), 0x0010000000000000, Z_Construct_UClass_USnapDoorMeshInfo_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Snap/Module/SnapDoorAsset.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoorAsset.h"));
				MetaData->SetValue(NewProp_ClosedMesh, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoorAsset.h"));
				MetaData->SetValue(NewProp_DoorMesh, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoorAsset.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USnapDoorAsset(Z_Construct_UClass_USnapDoorAsset, &USnapDoorAsset::StaticClass, TEXT("USnapDoorAsset"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USnapDoorAsset);
	UEnum* Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDoorMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_DungeonArchitectRuntime();
		extern uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDoorMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ESnapDoorMode"), 0, Get_Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDoorMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESnapDoorMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESnapDoorMode::Door")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESnapDoorMode::Closed")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESnapDoorMode::ESnapDoorMode_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ESnapDoorMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Closed.DisplayName"), TEXT("Closed"));
			MetaData->SetValue(ReturnEnum, TEXT("Door.DisplayName"), TEXT("Door"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoor.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDoorMode_CRC() { return 1846914175U; }
	UClass* Z_Construct_UClass_ASnapDoor_NoRegister()
	{
		return ASnapDoor::StaticClass();
	}
	UClass* Z_Construct_UClass_ASnapDoor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_DungeonArchitectRuntime();
			OuterClass = ASnapDoor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_ArrowComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ArrowComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ArrowComponent, ASnapDoor), 0x0010000800080008, Z_Construct_UClass_UArrowComponent_NoRegister());
				UProperty* NewProp_CaptionComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CaptionComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CaptionComponent, ASnapDoor), 0x0010000800080008, Z_Construct_UClass_UTextRenderComponent_NoRegister());
				UProperty* NewProp_SpriteComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SpriteComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(SpriteComponent, ASnapDoor), 0x0010000800080008, Z_Construct_UClass_UBillboardComponent_NoRegister());
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_DoorAsset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DoorAsset"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DoorAsset, ASnapDoor), 0x0010000000000005, Z_Construct_UClass_USnapDoorAsset_NoRegister());
				UProperty* NewProp_VisualMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("VisualMode"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(VisualMode, ASnapDoor), 0x0010000000000005, Z_Construct_UEnum_DungeonArchitectRuntime_ESnapDoorMode());
				UProperty* NewProp_AllowedModuleTypes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AllowedModuleTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(AllowedModuleTypes, ASnapDoor), 0x0010000000000005);
				UProperty* NewProp_AllowedModuleTypes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AllowedModuleTypes, TEXT("AllowedModuleTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_MeshComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MeshComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MeshComponent, ASnapDoor), 0x0010000000080008, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_ActorComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ActorComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ActorComponent, ASnapDoor), 0x0010000000080008, Z_Construct_UClass_UChildActorComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Builders/Snap/Module/SnapDoor.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoor.h"));
				MetaData->SetValue(NewProp_ArrowComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ArrowComponent, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoor.h"));
				MetaData->SetValue(NewProp_CaptionComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CaptionComponent, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoor.h"));
				MetaData->SetValue(NewProp_SpriteComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_SpriteComponent, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoor.h"));
				MetaData->SetValue(NewProp_DoorAsset, TEXT("Category"), TEXT("Misc"));
				MetaData->SetValue(NewProp_DoorAsset, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoor.h"));
				MetaData->SetValue(NewProp_VisualMode, TEXT("Category"), TEXT("Misc"));
				MetaData->SetValue(NewProp_VisualMode, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoor.h"));
				MetaData->SetValue(NewProp_AllowedModuleTypes, TEXT("Category"), TEXT("Snap Door"));
				MetaData->SetValue(NewProp_AllowedModuleTypes, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoor.h"));
				MetaData->SetValue(NewProp_MeshComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MeshComponent, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoor.h"));
				MetaData->SetValue(NewProp_MeshComponent, TEXT("ToolTip"), TEXT("Lets you emit your own markers into the scene"));
				MetaData->SetValue(NewProp_ActorComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ActorComponent, TEXT("ModuleRelativePath"), TEXT("Public/Builders/Snap/Module/SnapDoor.h"));
				MetaData->SetValue(NewProp_ActorComponent, TEXT("ToolTip"), TEXT("Lets you emit your own markers into the scene"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ASnapDoor(Z_Construct_UClass_ASnapDoor, &ASnapDoor::StaticClass, TEXT("ASnapDoor"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ASnapDoor);
	UPackage* Z_Construct_UPackage__Script_DungeonArchitectRuntime()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/DungeonArchitectRuntime")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xDEB75808;
			Guid.B = 0x88196131;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

			Z_Construct_UDelegateFunction_DungeonArchitectRuntime_DungeonBuildCompleteBindableEvent__DelegateSignature();
		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
